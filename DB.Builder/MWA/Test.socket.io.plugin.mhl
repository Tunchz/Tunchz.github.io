{
 "version": "-Tunchz/FWTT-",
 "header_image": "",
 "dashboard_title": "Test.socket.io.plugin",
 "avatar": "https://tunchz.github.io/DB.Builder/img/Mholan_Logo.png",
 "min_cols": 4,
 "background_image": null,
 "background_color": "#212121",
 "widget_background_color": "#383838",
 "widget_border_color": "#FFFFFF",
 "widget_border_width": 0,
 "widget_border_radius": "0",
 "widget_background_image": null,
 "fullscreen_auto_topmargin": true,
 "fullscreen_topmargin": 0,
 "allow_edit": true,
 "plugins": [],
 "panes": [
  {
   "width": 5,
   "row": {
    "4": 1,
    "9": 1,
    "10": 1,
    "11": 2,
    "12": 2
   },
   "col": {
    "4": 1,
    "9": 3,
    "10": 3,
    "11": 1,
    "12": 1
   },
   "col_width": 5,
   "transparent_bg": false,
   "border_radius": null,
   "border_width": null,
   "widgets": [
    {
     "type": "html",
     "settings": {
      "html": "var data = datasources[\"socket.io\"];\n//console.log(\"-------------\", data);\nvar streamContainer = document.getElementById('streaming-container');//$(\"#stream-container\");\n//console.log(\"-------------\", streamContainer);\nif (!streamContainer) {\n    var container = $(\"<div id='streaming-container' class='center' style='width:100%; height:100%; position:absolute;'>\"),\n        streaming = $(\"<img id='streaming' class='center' style='width:100%; height:100%'></div>\").dblclick(function() {\n      \tif (\n            document.fullscreenElement ||\n            document.webkitFullscreenElement ||\n            document.mozFullScreenElement ||\n            document.msFullscreenElement\n          ) {\n            if (document.exitFullscreen) {\n              document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n              document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) {\n              document.webkitExitFullscreen();\n            } else if (document.msExitFullscreen) {\n              document.msExitFullscreen();\n            }\n          } else {\n            //element = $('#container').get(0);\n            element = document.getElementById('streaming');\n            console.log(element);\n            if (element.requestFullscreen) {\n              element.requestFullscreen();\n            } else if (element.mozRequestFullScreen) {\n              element.mozRequestFullScreen();\n            } else if (element.webkitRequestFullscreen) {\n              element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            } else if (element.msRequestFullscreen) {\n              element.msRequestFullscreen();\n            }\n          }\n\n        });\n    //console.log(\"------------- creat div\");\n    container.append(streaming);\n    return container;\n    \n} else {\n    \n\tfunction base64ArrayBuffer(arrayBuffer) {\n\t\tvar base64    = '';\n\t\tvar encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t\tvar bytes         = new Uint8Array(arrayBuffer);\n\t\tvar byteLength    = bytes.byteLength;\n\t\tvar byteRemainder = byteLength % 3;\n\t\tvar mainLength    = byteLength - byteRemainder;\n\n\t\tvar a, b, c, d;\n\t\tvar chunk;\n\n\t\t// Main loop deals with bytes in chunks of 3\n\t\tfor (var i = 0; i < mainLength; i = i + 3) {\n\t\t\t// Combine the three bytes into a single integer\n\t\t\tchunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n\t\t\t// Use bitmasks to extract 6-bit segments from the triplet\n\t\t\ta = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\t\t\tb = (chunk & 258048)   >> 12; // 258048   = (2^6 - 1) << 12\n\t\t\tc = (chunk & 4032)     >>  6; // 4032     = (2^6 - 1) << 6\n\t\t\td = chunk & 63;               // 63       = 2^6 - 1\n\n\t\t\t// Convert the raw binary segments to the appropriate ASCII encoding\n\t\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n\t\t}\n\n\t\t// Deal with the remaining bytes and padding\n\t\tif (byteRemainder == 1) {\n\t\t\tchunk = bytes[mainLength];\n\n\t\t\ta = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n\t\t\t// Set the 4 least significant bits to zero\n\t\t\tb = (chunk & 3)   << 4; // 3   = 2^2 - 1\n\n\t\t\tbase64 += encodings[a] + encodings[b] + '==';\n\t\t} else if (byteRemainder == 2) {\n\t\t\tchunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n\t\t\ta = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\t\t\tb = (chunk & 1008)  >>  4; // 1008  = (2^6 - 1) << 4\n\n\t\t\t// Set the 2 least significant bits to zero\n\t\t\tc = (chunk & 15)    <<  2; // 15    = 2^4 - 1\n\n\t\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + '=';\n\t\t}\n\n\t\treturn base64;\n\t}\n    var image = document.getElementById('streaming');\n    var bytes = new Uint8Array(data);\n    image.src = 'data:image/jpeg;base64,' + base64ArrayBuffer(bytes);\n    //console.log(\"------------- streaming\");\n    return;\n}\n",
      "height": 6
     }
    }
   ]
  }
 ],
 "datasources": [
  {
   "name": "socket.io",
   "type": "socket.io",
   "settings": {
    "name": "socket.io",
    "disabled": false,
    "initial_script": "console.log(\"/////////run Initialize script\");\nreturn io('http://10.10.10.18:4567',{query:{url:'rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mov'}});",
    "url": "http://10.10.10.18:4567/cam_defined_rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mov",
    "events": [
     {
      "eventName": "data"
     }
    ]
   }
  }
 ],
 "columns": 9,
 "theme": "default"
}