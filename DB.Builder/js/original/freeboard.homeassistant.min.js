!function(){freeboard.loadWidgetPlugin({type_name:"hass_service_call",display_name:"Home Assistant - Call Service",description:"Call a Home Assistant service",external_scripts:[],fill_size:!1,settings:[{name:"service_name",display_name:"Service to call on click",type:"calculated"},{name:"service_args",display_name:"Arguments (JSON)",type:"calculated"},{name:"size",display_name:"Size",type:"option",options:[{name:"Regular (32px)",value:"regular"},{name:"Big (64px)",value:"big"}]},{name:"button_title",display_name:"Button title (null if none)",type:"calculated"},{name:"button_icon",display_name:"Button icon image URL (null if none)",type:"calculated"}],newInstance:function(settings,newInstanceCallback){newInstanceCallback(new HassServiceCallWidgetPlugin(settings))}});var HassServiceCallWidgetPlugin=function(settings){var self=this,currentSettings=settings,element=$("<button><img><div><span></span></div></button>");element.addClass("hass_button"),element.addClass("hass_button_small"),element.click(function(){var svc=self.service_name,args=self.service_args;if(svc){if(!window.haws_connection)return void console.error("No Home Assistant connection for widget (make sure you have a HAWS datasource configured)!");var svc_domain=HAWS.extractDomain(svc),svc_name=HAWS.extractObjectId(svc);window.haws_connection.callService(svc_domain,svc_name,args)}}),$("img",element).hide(),$("span",element).hide(),self.render=function(containerElement){$(containerElement).append(element)},self.getHeight=function(){return"big"==currentSettings.size?(element.removeClass("hass_button_small").addClass("hass_button_big"),2):(element.removeClass("hass_button_big").addClass("hass_button_small"),1)},self.onSettingsChanged=function(newSettings){currentSettings=newSettings},self.onCalculatedValueChanged=function(settingName,newValue){"button_title"==settingName?newValue?$("span",element).text(newValue).show():$("span",element).hide():"button_icon"==settingName?newValue?$("img",element).attr("src",newValue).show():$("img",element).hide():"service_name"==settingName?self.service_name=newValue:"service_args"==settingName&&(self.service_args=newValue)},self.onDispose=function(){}}}(),function(){freeboard.loadDatasourcePlugin({type_name:"hass",display_name:"Home Assistant",description:"Connects to Home Assistant instance via a WebSocket",external_scripts:["js/haws.umd.js"],settings:[{name:"hass_ws_url",display_name:"Home Assistant WS URL",type:"text",default_value:"ws://127.0.0.1:8123/api/websocket",description:"The URL to the Home Assistant instance WebSocket API.",required:!0},{name:"hass_api_key",display_name:"Home Assistant Auth Token",type:"text",default_value:"",description:"Home Assistant API authentication token. (Optional)",required:!1}],newInstance:function(settings,newInstanceCallback,updateCallback){newInstanceCallback(new HAWSDatasourcePlugin(settings,updateCallback))}});var HAWSDatasourcePlugin=function(settings,updateCallback){function doConnection(){var opts={};currentSettings.hass_api_key&&(opts.authToken=currentSettings.hass_api_key),console.log("HAWS datasource - connecting to "+currentSettings.hass_ws_url),HAWS.createConnection(currentSettings.hass_ws_url,opts).then(function(conn){self.conn=conn,"haws_connection"in window&&!self.owns_global_connection?console.log("Note: multiple Home Assistant connections are supported, but HA-specific widgets will only use the first"):(window.haws_connection=conn,self.owns_global_connection=!0),HAWS.subscribeEntities(conn,function(ents){updateCallback(ents)},"state_changed").then(function(cancelSub){self.cancelSubsription=cancelSub})},function(err){console.log("HAWS connection failed "+err)})}var self=this,currentSettings=settings;self.onSettingsChanged=function(newSettings){newSettings.hass_ws_url==currentSettings.hass_ws_url&&newSettings.hass_api_key==currentSettings.hass_api_key||(self.conn&&self.conn.close(),currentSettings=newSettings,doConnection())},self.updateNow=function(){},self.onDispose=function(){self.conn&&self.conn.close(),self.owns_global_connection&&delete window.haws_connection},doConnection()}}();