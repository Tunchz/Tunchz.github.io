(window.webpackJsonp=window.webpackJsonp||[]).push([[2],[,,,,,,,,function(t,e,o){const{basename:r}=o(48);e.sortByName=(t,o)=>{const r=e.unnamespace(e.getName(t)),s=e.unnamespace(e.getName(o));return r.localeCompare(s)},e.getName=(t,e=!0)=>{if(!t)return e?"Unknown":null;const o=(null!=t.properties?t.properties.name:void 0)||t.name||t.id;return!o&&e?"Unknown":o},e.unnamespace=t=>-1===t.indexOf("/")?t:r(t),e.namespace=(t,e)=>-1!==t.indexOf("/")?t:`${e}/${t}`,e.sortBySeen=(t,e)=>{const o=t,r=e;return o.seen?r.seen?(o.seen="object"==typeof o.seen?o.seen:new Date(o.seen),r.seen="object"==typeof r.seen?r.seen:new Date(r.seen),o.seen>r.seen?-1:r.seen>o.seen?1:0):-1:1},e.addToList=(t,o,r=e.sortByName)=>{let s=!1;t.forEach(t=>{if(t===o)return void(s=!0);if(e.unnamespace(e.getName(t,!1))===e.unnamespace(e.getName(o,!1))){const e=t;Object.keys(o).forEach(t=>{e[t]=o[t]}),s=!0}}),s||(t.push(o),t.sort(r))},e.removeFromList=(t,e)=>{const o=t.find(t=>{if(t===e)return!0;return(t.properties?t.properties.id:t.id)===(e.properties?e.properties.id:e.id)});o&&t.splice(t.indexOf(o),1)}},,,,,,,,,function(t,e,o){const r=o(24),{findByComponent:s}=o(29),{getName:n,namespace:p}=o(8);e.graphRuntimeIdentifier=(t,e=null)=>{if(t&&t.properties&&t.properties.runtimeName)return t.properties.runtimeName;const o=n(t);return e?p(o,e):o};const c=t=>({name:t.id,type:t.type,description:t.type,addressable:t.addressable,schema:t.schema});e.componentForLibrary=t=>({name:t.name,icon:t.icon||"cog",description:t.description||"",subgraph:t.subgraph,inports:t.inPorts.map(c),outports:t.outPorts.map(c)}),e.getGraphType=t=>{const e=t;return(null!=e.properties.environment?e.properties.environment.type:void 0)||"html"!==(null!=e.properties.environment?e.properties.environment.runtime:void 0)||(e.properties.environment.type="noflo-browser"),(null!=e.properties.environment?e.properties.environment.type:void 0)?e.properties.environment.type:null},e.getComponentType=t=>{const e=t.code.match(/@runtime ([a-z-]+)/);return e?e[1]:null},e.getSource=(t,e)=>t.protocol.component.getsource({name:e}).catch(o=>-1!==e.indexOf("/")?Promise.reject(o):t.definition.namespace?t.protocol.component.getsource({name:`${t.definition.namespace}/${e}`}):Promise.reject(o)),e.getRemoteNodes=(t,o)=>{const r=o;return r.remote.reduce((o,n)=>o.then(o=>{if(!(null!=o.nodes?o.nodes.length:void 0))return Promise.reject(new Error(`Node ${o.name} doesn't contain child nodes`));const[p]=o.nodes.filter(t=>t.id===n);if(!p)return Promise.reject(new Error(`Node ${n} not found in graph ${o.name||o.properties.id}`));const[c,a]=s(p.component,r.project);return"graph"===c?(r.graphs.push(a),Promise.resolve(a)):"component"===c?(r.component=a,Promise.resolve(a)):e.getSource(t,p.component).then(t=>["json","fbp"].includes(t.language)?e.loadGraph(t).then(t=>(r.graphs.push(t),Promise.resolve(t))):(r.component=t,Promise.resolve(t)))}),Promise.resolve(r.graphs[r.graphs.length-1])).then(()=>(r.remote=[],r))},e.loadGraph=t=>{let e;switch(t.language){case"json":e="loadJSON";break;case"fbp":e="loadFBP";break;default:return Promise.reject(new Error(`Unknown format ${t.language} for graph ${t.name}`))}return e="json"===t.language?"loadJSON":"loadFBP",r.graph[e](t.code).then(e=>{const o=e;return o.name=t.name,o})},e.isDefaultRuntime=t=>"iframe"===t.protocol&&"https://noflojs.org/noflo-browser/everything.html?fbp_noload=true&fbp_protocol=iframe"===t.address,e.ensureIframe=(t,e)=>{const o=t;if("iframe"!==o.definition.protocol)return Promise.resolve();o.definition.querySelector=`iframe[data-runtime='${o.definition.id}']`;let r=document.body.querySelector(o.definition.querySelector);return r||(r=document.createElement("iframe"),r.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),r.setAttribute("data-runtime",o.definition.id),r.setAttribute("data-project",e.id),r.className="iframe-runtime",document.body.appendChild(r)),o.transport.iframe?o.transport.iframe===r?Promise.resolve():o.disconnect().then(()=>(o.transport.iframe=r,Promise.resolve())):(o.transport.iframe=r,Promise.resolve())}},,,,,,,,,,,,function(t,e){e.findMainGraph=t=>{if(!t.graphs.length)return null;if(t.main){if(t.graphs.find(e=>e.properties.id===t.main))return t.main}const e=t.graphs.find(t=>"main"===t.name||!!t.properties.main);return e?e.properties.id:t.graphs[0].properties.id},e.findGraph=(t,e)=>e.graphs?e.graphs.find(e=>e.name===t||e.properties.id===t):null,e.findComponent=(t,e)=>e.components?e.components.find(e=>e.name===t):null,e.findByComponent=(t,o)=>{let[r,s]=t.split("/");s||(s=r,r=void 0);const n=e.findGraph(s,o);if(n)return["graph",n];const p=e.findComponent(s,o);return p?["component",p]:["runtime",t]},e.findProject=(t,e)=>e?e.find(e=>e.id===t):null,e.getProjectHash=(t,o)=>{if(t.runtime)return t.main?void o(null,["runtime",t.runtime,t.main]):void o(null,["runtime",t.runtime]);if(!t.graphs.length)return t.components.length?void o(null,["project",t.id,"component",t.components[0].name]):void setTimeout(()=>t.graphs.length||t.components.length?e.getProjectHash(t,o):o(new Error(`Project ${t.id} has no graphs or components`)),100);const r=t.main||t.graphs[0].properties.id;r?o(null,["project",t.id,r]):o(new Error("Unable find a main graph for project "+t.id))},e.isReadOnly=t=>!t.project||(!(!t.graph||-1!==t.project.graphs.indexOf(t.graph))||(!(!t.component||-1!==t.project.components.indexOf(t.component))||(t.graph&&t.runtime&&t.runtime.definition&&t.runtime.definition.capabilities?-1===t.runtime.definition.capabilities.indexOf("protocol:graph"):!!(t.component&&t.runtime&&t.runtime.definition&&t.runtime.definition.capabilities)&&-1===t.runtime.definition.capabilities.indexOf("component:setsource")))),e.guessLanguage=(t,e="javascript")=>-1!==t.indexOf("topic: ")&&-1!==t.indexOf("cases:")?"yaml":e},function(t,e){e.getComponentHash=(t,e)=>e.runtime?["runtime",e.runtime,"component",t]:["project",e.id,"component",t],e.getGraphHash=(t,e)=>e.runtime?["runtime",e.runtime,t]:["project",e.id,t],e.hashToString=t=>"#"+t.map(t=>encodeURIComponent(t)).join("/")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e){t.exports={inports:{},outports:{},groups:[],processes:{AppView:{component:"polymer/noflo-ui"},StoreDispatch:{component:"ui/Store"},State:{component:"ui/State"},MapStateToProps:{component:"ui/MapStateToProps"},Logger:{component:"ui/LoggingMiddleware"},UrlMiddleware:{component:"ui/UrlMiddleware"},StorageMiddleware:{component:"ui/StorageMiddleware"},UserMiddleware:{component:"ui/UserMiddleware"},RegistryMiddleware:{component:"ui/RegistryMiddleware"},GithubMiddleware:{component:"ui/GithubMiddleware"},RuntimeMiddleware:{component:"ui/RuntimeMiddleware"},Dispatch:{component:"ui/DispatchAction"},UserReducer:{component:"ui/UserReducer"},MainContext:{component:"ui/CreateContext"},StorageReducer:{component:"ui/StorageReducer"},GithubReducer:{component:"ui/GithubReducer"},RegistryReducer:{component:"ui/RegistryReducer"},RuntimeReducer:{component:"ui/RuntimeReducer"},ContextReducer:{component:"ui/ContextReducer"},ShowErrors:{component:"core/Output"},ListenWindow:{component:"interaction/ListenResize"}},connections:[{src:{process:"AppView",port:"event"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"State",port:"state"},tgt:{process:"StoreDispatch",port:"state"}},{src:{process:"State",port:"state"},tgt:{process:"MapStateToProps",port:"state"}},{src:{process:"State",port:"updated"},tgt:{process:"MapStateToProps",port:"updated"}},{src:{process:"MapStateToProps",port:"props"},tgt:{process:"AppView",port:"updated"}},{src:{process:"StoreDispatch",port:"pass"},tgt:{process:"Logger",port:"in"}},{src:{process:"Logger",port:"pass"},tgt:{process:"UrlMiddleware",port:"in"}},{src:{process:"UrlMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"UrlMiddleware",port:"pass"},tgt:{process:"StorageMiddleware",port:"in"}},{src:{process:"StorageMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"StorageMiddleware",port:"pass"},tgt:{process:"UserMiddleware",port:"in"}},{src:{process:"UserMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"UserMiddleware",port:"pass"},tgt:{process:"RegistryMiddleware",port:"in"}},{src:{process:"RegistryMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"RegistryMiddleware",port:"pass"},tgt:{process:"GithubMiddleware",port:"in"}},{src:{process:"GithubMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"GithubMiddleware",port:"pass"},tgt:{process:"RuntimeMiddleware",port:"in"}},{src:{process:"RuntimeMiddleware",port:"new"},tgt:{process:"StoreDispatch",port:"action"}},{src:{process:"RuntimeMiddleware",port:"pass"},tgt:{process:"Dispatch",port:"in"}},{data:"user:*,main:*,storage:*,storage:*:*,github:*,flowhub:*,runtime:*,context:*",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"UserReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"MainContext",port:"start"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"StorageReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"StorageReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GithubReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"RegistryReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:6},tgt:{process:"RuntimeReducer",port:"in"}},{src:{process:"Dispatch",port:"handle",index:7},tgt:{process:"ContextReducer",port:"in"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"ShowErrors",port:"in"}},{src:{process:"UserReducer",port:"context"},tgt:{process:"State",port:"in"}},{src:{process:"GithubReducer",port:"context"},tgt:{process:"State",port:"in"}},{src:{process:"RegistryReducer",port:"context"},tgt:{process:"State",port:"in"}},{src:{process:"RuntimeReducer",port:"context"},tgt:{process:"State",port:"in"}},{src:{process:"StorageReducer",port:"out"},tgt:{process:"State",port:"in"}},{src:{process:"MainContext",port:"out"},tgt:{process:"State",port:"in"}},{src:{process:"ContextReducer",port:"context"},tgt:{process:"State",port:"in"}},{data:"noflo-ui",tgt:{process:"AppView",port:"selector"}},{data:"",tgt:{process:"ListenWindow",port:"start"}},{src:{process:"ListenWindow",port:"width"},tgt:{process:"AppView",port:"width"}},{src:{process:"ListenWindow",port:"height"},tgt:{process:"AppView",port:"height"}}],properties:{environment:{type:"noflo-browser"},icon:"code"},caseSensitive:!1}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,o){const r=o(3),s=o(509),n=o(164);window.addEventListener("WebComponentsReady",()=>{window.nofloStarted=!1;let t=function(){return r.graph.loadJSON(n).then(t=>r.createNetwork(t)).then(t=>(t.on("process-error",t=>{"function"==typeof console.error?console.error(t.error):console.log(t.error)}),t))};"true"===String(localStorage.getItem("flowhub-debug"))&&(t=function(){const t=Math.random().toString(36).substring(7);return r.graph.loadJSON(n).then(e=>{const o={defaultGraph:e,baseDir:"noflo-ui",permissions:{}};o.permissions[t]=["protocol:component","protocol:runtime","protocol:graph","protocol:network","component:getsource","component:setsource"],o.label="NoFlo Development Environment",o.id="2b487ea3-287b-43f7-b7eb-806f02b402f9",o.namespace="ui",o.repository="git+https://github.com/noflo/noflo-ui.git";const r=document.createElement("button");r.id="flowhub_debug_url",r.innerText="Debug in Flowhub";const n="https://app.flowhub.io#runtime/endpoint?"+encodeURIComponent(`protocol=opener&address=${window.location.href}&id=${o.id}`);return r.setAttribute("href",n),document.body.appendChild(r),s.opener(o,r),Promise.resolve()})}),t().then(()=>{document.body.classList.remove("loading"),window.nofloStarted=!0,setTimeout(()=>{const t=document.getElementById("loading");document.body.removeChild(t)},400)},t=>{throw console.error(t),t})}),"serviceWorker"in navigator&&navigator.serviceWorker.register("service-worker.js")},,,,,,,,,,,function(t,e,o){const r=o(3),s=o(8),n=o(29),p=(t,e,o,n,p)=>{let c=e;const a=o;let i="loadJSON";"fbp"===a.remote.language&&(i="loadFBP"),"json"===a.remote.language&&(c=JSON.parse(c)),r.graph[i](c).then(e=>{const o=e;if(o.properties||(o.properties={}),o.properties.sha=t,o.properties.changed=!1,o.properties.project=n.id,a.local)return a.local.startTransaction(t),r.graph.mergeResolveTheirs(a.local,o),a.local.endTransaction(t),a.local.properties.changed=!1,s.addToList(n.graphs,a.local),void p(null,a.local);o.properties.name=a.remote.name,o.name=a.remote.name,o.properties.id=`${n.id}/${o.name}`,o.properties.environment||(o.properties.environment={}),o.properties.environment.type||(o.properties.environment.type=n.type),s.addToList(n.graphs,o),p(null,o)},t=>{p(new Error(`Failed to load ${a.remote.name}: ${t.message}`))})},c=(t,e,o,r,n)=>{const p=o;if(p.local)return p.local.code=e,p.local.sha=t,p.local.changed=!1,s.addToList(r.components,p.local),void n(null,p.local);const c={id:`${r.id}/${p.remote.name}`,project:r.id,name:p.remote.name,code:e,language:p.remote.language,sha:t,changed:!1};s.addToList(r.components,c),n(null,c)},a=(t,e,o,r,n)=>{const p=o;if(p.local)return p.local.code=e,p.local.sha=t,p.local.changed=!1,s.addToList(r.specs,p.local),void n(null,p.local);const c={id:`${r.id}/${p.remote.name}`,project:r.id,type:"spec",name:p.remote.name,code:e,language:p.remote.language,sha:t,changed:!1};s.addToList(r.specs,c),n(null,c)};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("blob",{datatype:"array",description:"Git blob entries"}),t.inPorts.add("operation",{datatype:"object",description:"Sync operation",required:!0}),t.outPorts.add("graph",{datatype:"object",scoped:!1}),t.outPorts.add("component",{datatype:"object",scoped:!1}),t.outPorts.add("spec",{datatype:"object",scoped:!1}),t.outPorts.add("project",{datatype:"object",scoped:!1}),t.outPorts.add("error",{datatype:"object",scoped:!1}),t.forwardBrackets={},t.process((t,e)=>{if(!t.hasData("operation"))return;if(!t.hasData("blob"))return;const[o,r]=t.getData("operation","blob");if(!(null!=o.pull?o.pull.length:void 0))return void e.done(new Error("Operation does not provide any pull entries"));const s=[],i=[];r.forEach(t=>{const{sha:e}=t;let r=t.content.replace(/\s/g,"");"base64"===t.encoding&&(r=decodeURIComponent(escape(atob(r))));const n=o.pull.find(t=>t.remote&&t.remote.sha===e);if(!n)return void i.push("No entry found for blob "+e);let d,u;switch(n.type){case"graph":d=p,u="graph";break;case"spec":d=a,u="spec";break;default:d=c,u="component"}d(e,r,n,o.project,(t,e)=>{t?i.push(t):s.push({type:u,entity:e})})}),i.length?e.done(i[0]):(s.forEach(t=>{const o={};o[t.type]=t.entity,e.send(o)}),o.project.main=n.findMainGraph(o.project),e.sendDone({project:o.project}))})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("existing",{datatype:"array"}),t.outPorts.add("new",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");if(!o.state||!o.state.projects||!o.state.projects.length)return void e.sendDone({new:o});const r=o.state.projects.filter(t=>t.gist===o.payload.graph);r.length?e.sendDone({existing:["project",r[0].id,r[0].main]}):e.sendDone({new:o})})}},function(t,e,o){const r=o(3),s=o(48),{v4:n}=o(32),p=o(29),c=t=>{const e=t.payload.repo.split("/");return{project:{id:n(),name:e[1],namespace:e[1].replace(/^noflo-/,""),repo:t.payload.repo,branch:t.payload.branch,graphs:[],components:[],specs:[]},repo:t.payload.repo}};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("existing",{datatype:"array"}),t.outPorts.add("new",{datatype:"object"}),t.outPorts.add("openmain",{datatype:"array"}),t.process((t,e)=>{if(!t.hasData("in"))return;const o=t.getData("in");if(!o.state||!o.state.projects||!o.state.projects.length)return void e.sendDone({openmain:{route:"main",runtime:null,project:null,graph:null,component:null,nodes:[]},new:c(o)});const r=o.state.projects.filter(t=>t.repo===o.payload.repo&&("master"===o.payload.branch&&!t.branch||t.branch===o.payload.branch));r.length?p.getProjectHash(r[0],(t,n)=>{let p=n;if(p||(p=["project",r[0].id,r[0].main]),o.payload.component){const t=((t,e)=>{const o=s.basename(t,s.extname(t)),r=e.components.find(t=>t.name===o);return r?r.name:null})(o.payload.component,r[0]);t&&(p[2]="component",p[3]=t)}if(o.payload.graph){const t=((t,e)=>{const o=s.basename(t,s.extname(t)),r=e.graphs.find(t=>t.name===o);return r?r.properties.id:null})(o.payload.graph,r[0]);t&&(delete p[3],p[2]=t)}e.sendDone({existing:p})}):e.sendDone({openmain:{route:"main",runtime:null,project:null,graph:null,component:null,nodes:[]},new:c(o)})})}},function(t,e,o){const r=o(3),s=o(35),n=(t,e,o)=>{const r=s.api();r.token(e);const n=r.get(t);n.on("success",t=>{t.body?o(null,t.body):o(new Error("No result received"))}),n.on("error",t=>o(t.body)),n()},p=(t,e,o,r)=>n(`/repos/${t}/git/trees/${e}`,o,r),c=(t,e,o)=>{const r=e;if(!t)return;const s=t.tree.filter(t=>"blob"===t.type&&!!t.path.match(".*.(coffee|js|hpp|c|py)$"));r.components=r.components.concat(s.map(t=>{const e=t;e.name=e.path.substr(0,e.path.indexOf("."));const r=e.path.substr(e.path.lastIndexOf(".")+1);switch(r){case"coffee":e.language="coffeescript";break;case"js":e.language="javascript";break;case"hpp":e.language="c++";break;case"c":e.language="c";break;case"py":e.language="python";break;default:e.language=r}return e.fullPath=`${o}${e.path}`,e}))},a=(t,e,o)=>{const r=e;if(!t)return;const s=t.tree.filter(t=>"blob"===t.type&&!!t.path.match(".*.(yaml|coffee)$"));r.specs=r.specs.concat(s.map(t=>{const e=t;e.name=e.path.substr(0,e.path.indexOf(".")),e.type="spec";const r=e.path.substr(e.path.lastIndexOf(".")+1);switch(r){case"coffee":e.language="coffeescript";break;default:e.language=r}return e.fullPath=`${o}${e.path}`,e}))},i=(t,e,o,r)=>((t,e,o,r)=>n(`/repos/${t}/git/commits/${e}`,o,r))(t,e,o,(s,n)=>{s?r(s):n?p(t,n.tree.sha,o,(e,s)=>{if(e)return void r(e);let i=null,d=null,u=null;const l={tree:n.tree.sha,graphs:[],components:[],specs:[]};s.tree.forEach(t=>{"fbp.json"===t.path&&"blob"===t.type||("graphs"!==t.path||"tree"!==t.type?"components"!==t.path||"tree"!==t.type?"spec"===t.path&&"tree"===t.type&&(u=t.sha):d=t.sha:i=t.sha)}),i?p(t,i,o,(e,s)=>{e?r(e):(((t,e,o)=>{const r=e;if(!t)return;let s=t.tree.filter(t=>"blob"===t.type&&!!t.path.match(".*.(fbp|json)$"));s=s.filter(t=>{if(-1===t.path.indexOf(".fbp"))return!0;const e=t.path.replace(".fbp",".json");return!s.find(t=>t.path===e)}),r.graphs=r.graphs.concat(s.map(t=>{const e=t;return e.name=e.path.substr(0,e.path.indexOf(".")),e.language=e.path.substr(e.path.lastIndexOf(".")+1),e.fullPath=`${o}${e.path}`,e}))})(s,l,"graphs/"),d?p(t,d,o,(e,s)=>{e?r(e):(c(s,l,"components/"),u?p(t,u,o,(t,e)=>{t?r(t):(a(e,l,"spec/"),r(null,l))}):r(null,l))}):r(null,l))}):d?p(t,d,o,(e,s)=>{e?r(e):(c(s,l,"components/"),u?p(t,u,o,(t,e)=>{t?r(t):(a(e,l,"spec/"),r(null,l))}):r(null,l))}):u?p(t,u,o,(t,e)=>t?r(t):(a(e,l,"spec/"),r(null,l))):r(null,l)}):r(new Error(`No commit found for ${t} ${e}`))}),d=t=>t.replace(/\s/g,"_"),u=(t,e)=>{const o=d(e.name);if("graph"===t)return`graphs/${o}.json`;let r="components";switch("spec"===t&&(r="spec"),e.language){case"coffeescript":return`${r}/${o}.coffee`;case"javascript":case"es2015":return`${r}/${o}.js`;case"c++":return`${r}/${o}.hpp`;case"python":return`${r}/${o}.py`;default:return`${r}/${o}.${e.language}`}},l=(t,e,o,r)=>r.pull.push({path:o.fullPath,type:t,local:e,remote:o}),g=(t,e,o,r)=>r.push.push({path:(null!=o?o.fullPath:void 0)||u(t,e),type:t,local:e,remote:o}),m=(t,e,o,r)=>r.conflict.push({path:o.fullPath,type:t,local:e,remote:o});e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("reference",{datatype:"object"}),t.inPorts.add("project",{datatype:"object"}),t.inPorts.add("token",{datatype:"string",required:!0,control:!0}),t.outPorts.add("noop",{datatype:"object"}),t.outPorts.add("local",{datatype:"object"}),t.outPorts.add("remote",{datatype:"object"}),t.outPorts.add("both",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("reference","project","token"))return;const[o,r,s]=t.getData("reference","project","token"),n={repo:r.repo,project:r,ref:o.ref,commit:o.object.sha,push:[],pull:[],conflict:[]};i(n.repo,n.commit,s,(t,o)=>{if(t)return void e.done(t);n.tree=o.tree,o.graphs.forEach(t=>{const e=r.graphs.filter(e=>e.properties.sha===t.sha||d(e.name)===t.name);e.length?e[0].properties.sha!==t.sha?!1!==e[0].properties.changed?m("graph",e[0],t,n):l("graph",e[0],t,n):e[0].properties.changed&&g("graph",e[0],t,n):l("graph",null,t,n)});let s=r.graphs.filter(t=>{let e=!0;return o.graphs.forEach(o=>{t.properties.sha===o.sha&&(e=!1),d(t.name)===o.name&&(e=!1)}),e});s.forEach(t=>{g("graph",t,null,n)}),o.components.forEach(t=>{const e=r.components.filter(e=>e.sha===t.sha||d(e.name)===t.name);e.length?e[0].sha!==t.sha?!1!==e[0].changed?m("component",e[0],t,n):l("component",e[0],t,n):e[0].changed&&g("component",e[0],t,n):l("component",null,t,n)}),s=r.components.filter(t=>{if(!t.code.length)return!1;let e=!0;return o.components.forEach(o=>{t.sha===o.sha&&(e=!1),d(t.name)===o.name&&(e=!1)}),e}),s.forEach(t=>{g("component",t,null,n)}),o.specs.forEach(t=>{const e=r.specs.filter(e=>e.sha===t.sha||d(e.name)===t.name);e.length?e[0].sha!==t.sha?!1!==e[0].changed?m("spec",e[0],t,n):l("spec",e[0],t,n):e[0].changed&&g("spec",e[0],t,n):l("spec",null,t,n)}),s=r.specs.filter(t=>{if(!t.code.length)return!1;let e=!0;return o.specs.forEach(o=>{t.sha===o.sha&&(e=!1),d(t.name)===o.name&&(e=!1)}),e}),s.forEach(t=>{g("spec",t,null,n)}),n.conflict.length||n.push.length&&n.pull.length?e.sendDone({both:n}):n.push.length?e.sendDone({local:n}):n.pull.length?e.sendDone({remote:n}):e.sendDone({noop:n})})})}},,,,,,function(t,e,o){const r=o(57),s=o(87),n=o(3);e.getComponent=()=>{const t=new n.Component;return t.inPorts.add("in",{datatype:"all"}),t.outPorts.add("pass",{datatype:"all"}),t.outPorts.add("code",{datatype:"string"}),t.outPorts.add("error",{datatype:"string"}),t.process((t,e)=>{const o=t.getData("in");if("string"!=typeof o.payload)return void e.done(new Error("URL must be a string"));const n=r.parse(o.payload);if(!n.query)return void e.sendDone({pass:o});const p=s.parse(n.query);p.error&&p.error_description?e.done(new Error(p.error_description)):(p.code||e.sendDone({pass:o}),e.sendDone({code:p.code}))})}},,,,,,,,,,,,,,,function(t,e){},,,,function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.description="Strips state from action payloads for backwards compat",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"all"}),t.process((t,e)=>{const o=t.getData("in");e.sendDone({out:o.payload||o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");e.sendDone({out:{id:o.id,name:o.name,namespace:o.namespace,runtime:o.runtime,type:o.type,repo:o.repo,branch:o.branch,gist:o.gist,main:o.main}})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("clear",{datatype:"bang"}),t.outPorts.add("user",{datatype:"object"}),t.process((t,e)=>{t.getData("clear");const o={};["flowhub-avatar","flowhub-plan","flowhub-theme","flowhub-token","flowhub-user","github-token","github-username"].forEach(t=>{localStorage.removeItem(t),o[t]=null}),e.sendDone({user:o})})}},function(t,e,o){const r=o(3),s=(t,e)=>t.getStream(e).filter(t=>"data"===t.type&&!(!t.data||!0===t.data)).map(t=>t.data);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("project",{datatype:"object"}),t.inPorts.add("graph",{datatype:"object"}),t.inPorts.add("component",{datatype:"object"}),t.inPorts.add("spec",{datatype:"object"}),t.inPorts.add("runtime",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{if(!t.hasStream("project","graph","component","spec","runtime"))return;const o={projects:s(t,"project"),graphs:s(t,"graph"),components:s(t,"component"),specs:s(t,"spec"),runtimes:s(t,"runtime")};e.sendDone({out:o})})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.description="Create a GitHub commit",t.inPorts.add("message",{datatype:"string",description:"Commit message"}),t.inPorts.add("tree",{datatype:"string",description:"Tree SHA"}),t.inPorts.add("parents",{datatype:"array",description:"Parent commits"}),t.inPorts.add("repository",{datatype:"string",description:"Repository path"}),t.inPorts.add("token",{datatype:"string",description:"GitHub API token",required:!0,scoped:!1,control:!0}),t.outPorts.add("out",{datatype:"string"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("message","tree","parents","repository","token"))return;const[o,r,n,p,c]=t.getData("message","tree","parents","repository","token"),a=s.api();c&&a.token(c);const i=a.post(`/repos/${p}/git/commits`,{message:o,tree:r,parents:n||[]});i.on("success",t=>{e.sendDone({out:t.body.sha})}),i.on("error",t=>e.done(t.error||t.body)),i()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="file-o",t.inPorts.add("start",{datatype:"bang"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{t.getData("start");const o={state:("","ok"),project:null,runtime:null,component:null,graphs:[],remote:[]};e.sendDone({out:o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="file-o",t.inPorts.add("start",{datatype:"bang"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{t.getData("start");const o={state:("","ok")};e.sendDone({out:o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="spinner",t.inPorts.add("start",{datatype:"bang"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{t.getData("start");const o={state:("","loading")};e.sendDone({out:o})})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.description="Create a GitHub tree",t.inPorts.add("tree",{datatype:"array",description:"Tree entries to create"}),t.inPorts.add("repository",{datatype:"string",description:"Repository path"}),t.inPorts.add("base",{datatype:"string",description:"Base tree to create the tree for",control:!0}),t.inPorts.add("token",{datatype:"string",description:"GitHub API token",required:!0,scoped:!1,control:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("tree","repository","base","token"))return;const[o,r,n,p]=t.getData("tree","repository","base","token"),c=s.api();p&&c.token(p);const a=c.post(`/repos/${r}/git/trees`,{tree:o,base_tree:n});a.on("success",t=>{e.sendDone({out:t.body})}),a.on("error",t=>e.done(t.error||t.body)),a()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"bang"}),t.process((t,e)=>{t.hasData("in")&&(t.getData("in"),window.nofloDBReady=!0,e.done())})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="code-fork",t.inPorts.add("routes",{datatype:"string",required:!0,control:!0}),t.inPorts.add("in",{datatype:"all"}),t.outPorts.add("pass",{datatype:"all"}),t.outPorts.add("handle",{datatype:"all",addressable:!0}),t.outPorts.add("handling",{datatype:"integer"}),t.forwardBrackets={},t.process((t,e)=>{if(!t.hasData("routes","in"))return;const[o,s]=t.getData("routes","in");if(!(null!=s?s.action:void 0))return void e.sendDone({pass:s});const n=o.split(","),p=((t,e)=>e.map(e=>{if(-1===e.indexOf("*"))return e;return e.split(":").map((e,o)=>"*"!==e?e:t[o]?t[o]:e).join(":")}).indexOf(t.join(":")))(s.action.split(":"),n);-1!==p?(e.send({handling:p,handle:new r.IP("data",s,{index:p})}),e.done()):e.sendDone({pass:s})})}},function(t,e,o){const r=o(3),s=t=>{let e=t;return null==e&&(e=60466176),e=Math.floor(Math.random()*e),e.toString(36)};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("id",{datatype:"string"}),t.process((t,e)=>{const o=t.getData("in");if(o.properties){if(o.properties.id)return o.id=o.properties.id,void e.sendDone({out:o,id:o.id});const t=s();return o.properties.id=t,o.id=t,void e.sendDone({out:o,id:o.id})}o.id||(o.id=s()),e.sendDone({out:o,id:o.id})})}},function(t,e,o){const r=o(3),{v4:s}=o(32),n="https://noflojs.org/noflo-browser/everything.html?fbp_noload=true&fbp_protocol=iframe";e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"array"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("runtimes",{datatype:"array"}),t.process((t,e)=>{const o=t.getData("in")||[],r=(t=>{if(t.find(t=>"iframe"===t.protocol&&t.address===n))return null;return{label:"NoFlo HTML5 environment",id:s(),protocol:"iframe",address:n,type:"noflo-browser",seen:Date.now()}})(o);r&&(e.send({out:r}),o.push(r)),e.sendDone({runtimes:o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="exclamation-triangle",t.inPorts.add("error",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("error");e.sendDone({out:{state:"error",error:o.payload||o}})})}},function(t,e,o){const r=o(87),s=o(3);e.getComponent=()=>{const t=new s.Component;return t.inPorts.add("code",{datatype:"string"}),t.outPorts.add("token",{datatype:"string"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("code"),s={redirect:"http://localhost:9999",clientid:"46fe25abef8d07e6dc2d",clientsecret:null,token_server:"https://github.com",token_endpoint:"/login/oauth/access_token",gatekeeper_server:"https://api.flowhub.io",gatekeeper_endpoint:"/auth/github/token/development"};return"https:"===window.location.protocol&&(s.redirect="https://noflojs.org/noflo-ui/",s.clientid="4a19e1d4dc9f03072d0e",s.clientsecret=null,s.gatekeeper_endpoint="/auth/github/token/development_ssl"),((t,e,o)=>{const s=new XMLHttpRequest;if(s.onreadystatechange=()=>{if(4!==s.readyState)return;if(200!==s.status){try{const t=JSON.parse(s.responseText);o(new Error("Authentication token exchange failed with "+t.error))}catch(t){o(new Error(s.responseText))}return}let t;try{t=JSON.parse(s.responseText)}catch(t){return void o(t)}const e=t.token||t.access_token||null;o(null,e)},e.clientsecret){const o={code:t,client_id:e.clientid,client_secret:e.clientsecret,grant_type:"authorization_code",redirect_uri:e.redirect||window.location.href};return s.open("POST",`${e.token_server}${e.token_endpoint}`,!0),s.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),s.setRequestHeader("Accept","application/json"),void s.send(r.stringify(o))}s.open("GET",`${e.gatekeeper_server}${e.gatekeeper_endpoint}/${t}`,!0),s.send(null)})(o,s,(t,o)=>{t?e.done(t):o?e.sendDone({token:o}):e.done(new Error("OAuth token exchange didn't return a token"))})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("graph",{datatype:"object",control:!0}),t.inPorts.add("search",{datatype:"string"}),t.outPorts.add("nodes",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("search","graph"))return;const[o,r]=t.getData("search","graph");if(o.length<1)return void e.sendDone({nodes:null});const s=o.toLowerCase();r.nodes.forEach(t=>{t.metadata.label.toLowerCase().indexOf(s)>=0&&e.send({nodes:t})}),e.done()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.description="Reads requested keys from action and sends them out alongside the action payload",t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("keys",{datatype:"string",control:!0}),t.outPorts.add("values",{datatype:"all",addressable:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("state",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in"))return;if(t.attached("keys").length&&!t.hasData("keys"))return;const o=t.getData("in");if(t.hasData("keys")){const s=((t,e)=>t.map(t=>{if(-1===t.indexOf("["))return e[t];const o=t.match(/(.*)\[([0-9]+|last)\]/);if(!o)return null;const r=e[o[1]];return"last"===o[2]?r[r.length-1]:r[o[2]]}))(t.getData("keys").split(","),o.state);for(let t=0;t<s.length;t+=1){const o=s[t];e.send({values:new r.IP("data",o,{index:t})})}}e.sendDone({state:o.state||{},out:o.payload||o})})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.description="Get a git blob",t.inPorts.add("repository",{datatype:"string",description:"Repository path",required:!0}),t.inPorts.add("sha",{datatype:"string",description:"Blob SHA",required:!0}),t.inPorts.add("token",{datatype:"string",description:"GitHub API token",required:!0,scoped:!1,control:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("repository","sha","token"))return;const[o,r,n]=t.getData("repository","sha","token"),p=s.api();n&&p.token(n);const c=p.get(`/repos/${o}/git/blobs/${r}`);c.on("success",t=>{t.body?e.sendDone({out:t.body}):e.done(new Error("no result available"))}),c.on("error",t=>e.done(t.error||t.body)),c()})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("repository",{datatype:"string"}),t.inPorts.add("token",{datatype:"string",required:!0,scoped:!1,control:!0}),t.inPorts.add("reference",{datatype:"string",default:"heads/master",required:!0,control:!0}),t.outPorts.add("reference",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("repository","token","reference"))return;const[o,r,n]=t.getData("repository","token","reference"),p=s.api();r&&p.token(r);const c=n||"heads/master",a=p.get(`/repos/${o}/git/refs/${c}`);a.on("success",t=>{t.body?e.sendDone({reference:t.body}):e.done(new Error("No result received"))}),a.on("error",t=>e.done(t.error||t.body)),a()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("user",{datatype:"object"}),t.outPorts.add("projects",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("user");if(!o["flowhub-token"])return void e.done();const r=new XMLHttpRequest;r.onreadystatechange=()=>{if(4===r.readyState)if(200!==r.status)e.done(new Error(r.responseText));else{let t;try{t=JSON.parse(r.responseText)}catch(t){return void e.done(t)}e.sendDone({projects:t})}},r.open("GET","https://api.flowhub.io/projects",!0),r.setRequestHeader("Authorization","Bearer "+o["flowhub-token"]),r.send(null)})}},function(t,e,o){const r=o(3),s=o(88);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("user",{datatype:"object"}),t.inPorts.add("runtimes",{datatype:"array",required:!0,control:!0}),t.outPorts.add("runtime",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("user","runtimes"))return;const[o,n]=t.getData("user","runtimes");if(!o["flowhub-token"])return void e.done();const p=n||[];s.list(o["flowhub-token"],{host:"https://api.flowhub.io"},(t,o)=>{if(t)return void e.done(t);const s=o.filter(t=>{const e=t,o=p.find(t=>t.id===e.runtime.id);if(!o)return!0;const r=new Date(o.seen);return(e.runtime.seen.getTime()!==r.getTime()||e.runtime.address!==o.address||e.runtime.secret!==o.secret)&&(e.runtime.capabilities=o.capabilities,e.runtime.components=o.components,!0)});s.length?(e.send({runtime:new r.IP("openBracket","https://api.flowhub.io")}),s.forEach(t=>{e.send({runtime:t.runtime})}),e.sendDone({runtime:new r.IP("closeBracket","https://api.flowhub.io")})):e.done()})})}},,,,,,,,,,,function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("token",{datatype:"string",required:!0}),t.outPorts.add("user",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("token"),r=new XMLHttpRequest;r.onreadystatechange=()=>{if(4!==r.readyState)return;if(200!==r.status){try{const t=JSON.parse(r.responseText);e.done(new Error(t.message||"User fetching failed with "+r.status))}catch(t){e.done(new Error(r.responseText))}return}let t;try{t=JSON.parse(r.responseText)}catch(t){return void e.done(t)}e.sendDone({user:t})},r.open("GET","https://api.flowhub.io/user",!0),r.setRequestHeader("Authorization","Bearer "+o),r.send(null)})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"bang"}),t.outPorts.add("out",{datatype:"string"}),t.process((t,e)=>{t.getData("in"),e.sendDone({out:window.location.href})})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.description="Get user token from action",t.icon="key",t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("limit",{datatype:"int",default:50,control:!0}),t.outPorts.add("token",{datatype:"string"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","limit"))return;const[o,r]=t.getData("in","limit");let n;o.state&&o.state.user&&o.state.user["github-token"]&&(n=o.state.user["github-token"]);const p=s.api();n&&p.token(n);const c=p.get("/rate_limit");c.on("success",t=>{if(((null!=t.body.rate?t.body.rate.remaining:void 0)||0)<(r?parseInt(r,10):50))return n?void e.done(new Error("GitHub API access rate limited, try again later")):void e.done(new Error("GitHub API access rate limited. Please log in to increase the limit"));e.sendDone({token:n,out:o.payload})}),c.on("error",t=>{const o=t.error||t.body;o?e.done(new Error("Failed to communicate with GitHub: "+o)):e.done(new Error("Failed to communicate with GitHub. Try again later"))}),c()})}},function(t,e,o){const r=o(3),s=o(35),n=o(48);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object",required:!0}),t.inPorts.add("token",{datatype:"string",required:!0,control:!0}),t.outPorts.add("graph",{datatype:"object"}),t.outPorts.add("component",{datatype:"object"}),t.outPorts.add("project",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in"))return;const o=s.api();t.hasData("token")&&o.token(t.getData("token"));const p=t.getData("in"),c={id:p.graph,gist:p.graph,graphs:[],components:[],specs:[]},a=o.get("/gists/"+p.graph);a.on("success",t=>{(null!=t.body?t.body.files:void 0)?(c.name=t.body.description,Promise.all(Object.keys(t.body.files).map(e=>{const o=t.body.files[e],s=n.basename(e,n.extname(e));if(".json"===n.extname(e))return r.graph.loadJSON(o.content).then(t=>{t.setProperties({project:c.id,id:`${c.id}/${s}`}),c.main||(c.main=t.properties.id),c.name||(c.name=t.name),t.properties&&t.properties.environment&&t.properties.environment.type&&!c.type&&(c.type=t.properties.environment.type),c.graphs.push(t)});const p={name:s,language:o.language,project:c.id,id:`${c.id}/${s}`,code:o.content,tests:""};return c.components.push(p),Promise.resolve()})).then(()=>{const t=[...c.graphs],o=[...c.components];e.send({project:c}),t.forEach(t=>{e.send({graph:t})}),o.forEach(t=>{e.send({components:t})}),e.done()})):e.done(new Error(`Gist ${p.gist} didn't provide any files`))}),a.on("error",t=>e.done(t.error||t.body)),a()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("missed",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in"))return;const o=t.getData("in");o.state.runtime?e.sendDone({out:o}):e.sendDone({missed:o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;t.inPorts.add("in",{description:"Runtime client instance",datatype:"object"}),t.outPorts.add("runtimeupdate",{datatype:"object"}),t.outPorts.add("status",{description:"Runtime status change",datatype:"object"}),t.outPorts.add("components",{datatype:"object"}),t.outPorts.add("component",{datatype:"object"}),t.outPorts.add("started",{datatype:"object"}),t.outPorts.add("stopped",{datatype:"object"}),t.outPorts.add("packet",{datatype:"object"}),t.outPorts.add("output",{datatype:"object"}),t.outPorts.add("icon",{datatype:"object"}),t.outPorts.add("networkerror",{datatype:"object"}),t.outPorts.add("processerror",{datatype:"object"}),t.outPorts.add("protocolerror",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.clients={};const e=e=>{t.clients[e]&&(t.clients[e].client.removeListener("connected",t.clients[e].onConnected),t.clients[e].client.transport.removeListener("status",t.clients[e].onStatus),t.clients[e].client.removeListener("signal",t.clients[e].onSignal),t.clients[e].client.removeListener("protocolError",t.clients[e].onProtocolError),t.clients[e].context.deactivate(),delete t.clients[e])};return t.tearDown=o=>{Object.keys(t.clients).forEach(t=>{e(t)}),o()},t.process((o,r,s)=>{if(!o.hasData("in"))return;const n=o.getData("in");let{id:p}=n.definition;e(p);const c=()=>{n.definition.id!==p&&(t.clients[n.definition.id]=t.clients[p],delete t.clients[p],p=n.definition.id)};t.clients[p]={context:s,client:n,onConnected(){c(),r.send({runtimeupdate:n.definition}),n.canSend("component","list")&&setTimeout(()=>n.protocol.component.list().then(t=>r.send({components:{components:t,runtime:p}})).then(()=>n.definition.graph?n.protocol.network.getstatus({graph:n.definition.graph}).then(t=>{t.running&&r.send({started:{status:t,runtime:p}})}):Promise.resolve()).catch(t=>{const e=t;e.runtime=p,r.send({error:e})}),1)},onStatus(t){c(),n.definition.seen=new Date,r.send({status:{status:t,runtime:p}})},onSignal(t){((t,e,o)=>{const r=t;switch("error"===r.command&&(r.payload.runtime=e,o.send({error:{payload:r.payload}})),`${r.protocol}:${r.command}`){case"component:component":return void o.send({component:{component:r.payload,runtime:e}});case"network:started":return void o.send({started:{status:r.payload,runtime:e}});case"network:stopped":return void o.send({stopped:{status:r.payload,runtime:e}});case"network:begingroup":return r.payload.type="openBracket",void o.send({packet:{packet:r.payload,runtime:e}});case"network:data":return r.payload.type="data",void o.send({packet:{packet:r.payload,runtime:e}});case"network:endgroup":return r.payload.type="closeBracket",void o.send({packet:{packet:r.payload,runtime:e}});case"network:output":return void o.send({output:{output:r.payload,runtime:e}});case"network:error":return void o.send({networkerror:{error:r.payload,runtime:e}});case"network:processerror":return void o.send({processerror:{error:r.payload,runtime:e}});case"network:icon":o.send({icon:{icon:r.payload,runtime:e}})}})(t,p,r)},onProtocolError(t){r.send({protocolerror:{error:t,runtime:p}})}},n.on("connected",t.clients[p].onConnected),n.transport.on("status",t.clients[p].onStatus),n.on("signal",t.clients[p].onSignal),n.on("protocolError",t.clients[p].onProtocolError)})}},function(t,e,o){const r=o(3),s=o(124);e.getComponent=()=>{const t=new r.Component;return t.description="Load fbp-spedc tests for the project",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in"))return;const{project:o}=t.getData("in"),r=o.specs.filter(t=>"yaml"===t.language&&t.code).map(t=>{try{return s.testsuite.loadYAML(t.code)}catch(t){return[]}}).reduce((t,e)=>t.concat(e),[]);e.sendDone({out:[...r]})})}},,,,,,,,,,,,,,,,function(t,e){},,function(t,e){},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("start",{datatype:"bang"}),t.outPorts.add("user",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{t.getData("start");const o={"grid-avatar":"flowhub-avatar","grid-token":"flowhub-token","grid-user":"flowhub-user"};Object.keys(o).forEach(t=>{const e=o[t],r=localStorage.getItem(t);r&&(localStorage.setItem(e,r),localStorage.removeItem(t))});const r={};["flowhub-avatar","flowhub-debug","flowhub-plan","flowhub-theme","flowhub-token","flowhub-user","github-token","github-username"].forEach(t=>{r[t]=localStorage.getItem(t)}),((t,e)=>{const o=t;if(o["flowhub-user"]){try{o["flowhub-user"]=JSON.parse(o["flowhub-user"])}catch(t){return void e(t)}e(null,o)}else e(null,o)})(r,(t,o)=>{t?e.done(t):e.sendDone({user:o})})})}},function(t,e,o){const r=o(3),s=o(14)("noflo-ui:action"),n=o(14)("noflo-ui:action:full"),p=o(14)("noflo-ui:error"),c=(t,e,o)=>{let r=e,s=o;null==r&&(r="click"),null==s&&(s="menu"),"function"==typeof window.ga&&window.ga("send","event",s,r,t)};e.getComponent=()=>{const t=new r.Component;return t.icon="file-text",t.inPorts.add("in",{datatype:"all"}),t.outPorts.add("pass",{datatype:"all"}),t.process((t,e)=>{const o=t.getData("in"),{action:r}=o;switch(s(r),n(r,o.payload),r.match(/:error$/)&&p(o.payload),r){case"application:hash":(t=>{let e=t;"function"==typeof window.ga&&e&&(-1!==e.indexOf("?")&&([e]=e.split("?")),window.ga("set","page",`${window.location.pathname}${window.location.search}#${e}`),window.ga("send","pageview"))})(o.payload);break;case"user:login":c("userLogin");break;case"user:logout":c("userLogout");break;case"github:open":c("pullGithub","navigation","url");break;case"gist:open":c("pullGist","navigation","url");break;case"main:open":c("openHome","navigation","url");break;case"runtime:start":c("startRuntime","click","button");break;case"runtime:stop":c("stopRuntime","click","button");break;case"runtime:output":o.payload.output.message&&console.error(o.payload.output.message);break;case"runtime:processerror":console.error(o.payload.error.error);break;case"runtime:networkerror":case"runtime:protocolerror":console.error(o.payload.error);break;case"runtime:error":console.error(o.payload)}e.sendDone({pass:o})})}},function(t,e,o){const r=o(3),s=o(57),n=o(87),p=t=>{const e={client_id:t.client,response_type:"code",redirect_uri:t.url};return t.scopes.length&&(e.scope=t.scopes.join(" ")),"https://github.com/login/oauth/authorize?"+n.stringify(e)};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"string"}),t.outPorts.add("codeurl",{datatype:"string"}),t.outPorts.add("redirect",{datatype:"string"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");if(!(t=>{let e;const o=s.parse(t);return e="https:"===window.location.protocol?s.parse("https://noflojs.org/noflo-ui/"):s.parse("http://localhost:9999"),o.host===e.host})(o.payload.url))return void e.done(new Error("App URL must match GitHub app configuration http://localhost:9999"));const r={client:"46fe25abef8d07e6dc2d",url:o.payload.url,scopes:o.payload.scopes};"https:"===window.location.protocol&&(r.client="4a19e1d4dc9f03072d0e"),e.sendDone({redirect:p(r)})})}},function(t,e,o){const r=o(3),{graphRuntimeIdentifier:s}=o(17),n=t=>{const e=t;if(!(null!=e.runtime?e.runtime.id:void 0))return null;e.runtimeStatuses||(e.runtimeStatuses={}),e.runtimeExecutions||(e.runtimeExecutions={}),e.componentLibraries||(e.componentLibraries={});return{definition:e.runtime,status:e.runtimeStatuses[e.runtime.id]||{},execution:e.runtimeExecutions[e.runtime.id]||{running:!1,label:"not started"}}};e.getComponent=()=>{const t=new r.Component;return t.description="Map application state to UI properties",t.inPorts.add("state",{datatype:"object",description:"Full application state"}),t.inPorts.add("updated",{datatype:"object",description:"Updated application state values"}),t.outPorts.add("props",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("state","updated"))return;const[o,r]=t.getData("state","updated"),p={};Object.keys(r).forEach(t=>{switch(t){case"runtime":return(null!=o.runtime?o.runtime.id:void 0)?(p.runtime=n(o),void(p.componentLibrary=o.componentLibraries[o.runtime.id]||[])):(p.runtime=r.runtime,p.componentLibrary=[],p.packets=[],p.events=[],p.edges=[],void(p.icons={}));case"componentLibraries":if(!(null!=o.runtime?o.runtime.id:void 0))return;return void(p.componentLibrary=r[t][o.runtime.id]||[]);case"runtimeStatuses":case"runtimeExecutions":return void(p.runtime=n(o));case"runtimePackets":{if(!(null!=o.runtime?o.runtime.id:void 0))return;if(!r.runtimePackets[o.runtime.id])return void(p.packets=[]);const t=r.runtimePackets[o.runtime.id].toarray();t.reverse();const e=o.project?o.project.namespace:null;return void(p.packets=t.filter(t=>t.graph===s(o.graphs[0],e)))}case"runtimeEvents":{if(!(null!=o.runtime?o.runtime.id:void 0))return;if(!r.runtimeEvents[o.runtime.id])return void(p.events=[]);const t=r.runtimeEvents[o.runtime.id].toarray();return t.reverse(),void(p.events=t)}case"runtimeIcons":{if(!(null!=o.runtime?o.runtime.id:void 0))return;if(p.icons={},!r.runtimeIcons[o.runtime.id])return;if(!(null!=o.graphs?o.graphs.length:void 0))return;const t=o.graphs[o.graphs.length-1],e=t.name||t.properties.id;if(!r.runtimeIcons[o.runtime.id][e])return;return void Object.keys(r.runtimeIcons[o.runtime.id][e]).forEach(t=>{const s=r.runtimeIcons[o.runtime.id][e][t];p.icons[t]=s})}default:p[t]=r[t]}}),e.sendDone({props:p})})}},function(t,e,o){const r=o(3),{v4:s}=o(32),n=o(57),p=o(48),{loadGraph:c,ensureIframe:a,getRemoteNodes:i,getSource:d}=o(17),{findGraph:u,findComponent:l,guessLanguage:g}=o(29),{addToList:m,unnamespace:h}=o(8),y=t=>t.definition&&t.definition.namespace?t.definition.namespace:null;e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.inPorts.add("projects",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("project",{datatype:"object"}),t.outPorts.add("graph",{datatype:"object"}),t.outPorts.add("component",{datatype:"object"}),t.outPorts.add("spec",{datatype:"object"}),t.outPorts.add("runtime",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client","projects"))return;const[o,r,S]=t.getData("in","client","projects"),f={state:"ok",graphs:[],remote:o.nodes||[],project:{},component:null,runtime:o.runtime};Promise.resolve().then(()=>a(r,{id:s()})).then(()=>r.connect()).then(t=>t.graph?(f.project=((t,e)=>{const o=e.find(e=>!(!e.runtime||e.runtime!==t.definition.id));if(o)return o;return{id:s(),name:y(t),namespace:y(t),runtime:t.definition.id,type:t.definition.type,graphs:[],components:[],specs:[]}})(r,S),((t,e)=>{const o=e;if(t.definition.repository){const e=n.parse(t.definition.repository);if("github.com"===e.hostname&&e.pathname){const t=e.pathname.slice(1),r=p.dirname(t),s=p.basename(t,p.extname(t));o.repo=`${r}/${s}`,o.name=s}}t.definition.repositoryVersion&&(o.branch=t.definition.repositoryVersion)})(r,f.project),d(r,t.graph)):Promise.reject(new Error(`Runtime ${t.id} is not running a graph`))).then(t=>c(t)).then(t=>{t.setProperties({id:`${f.project.id}/${h((null!=t.properties?t.properties.id:void 0)||t.name)}`,project:f.project.id,runtimeName:r.definition.graph}),m(f.project.graphs,t),f.project.main=t.properties.id}).then(()=>((t,e)=>t?e.connect().then(()=>e.protocol.component.list()).then(e=>e.map(t=>t.name).filter(e=>((t,e)=>{if(-1===e.indexOf("/")&&"Graph"!==e)return!0;const[o]=e.split("/");return o===t})(t,e))).then(t=>Promise.all(t.map(t=>d(e,t)))):Promise.resolve([]))(f.project.namespace,r)).then(t=>{const e=t.filter(t=>"json"===t.language&&(t.name!==r.definition.graph&&`${t.library}/${t.name}`!==r.definition.graph));return Promise.all(e.map(t=>c(t).then(e=>{const o=e;return o.name=h(t.name),o.setProperties({id:`${f.project.id}/${h((null!=o.properties?o.properties.id:void 0)||o.name)}`,project:f.project.id}),o}))).then(e=>{e.forEach(t=>{m(f.project.graphs,t)});t.filter(t=>"json"!==t.language).forEach(t=>{const e=t;e.project=f.project.id,e.id=`${f.project.id}/${e.name}`,m(f.project.components,e)});t.filter(t=>t.tests).forEach(t=>{const e={id:`${f.project.id}/${t.name}`,name:t.name,code:t.tests,language:g(t.tests,t.language),project:f.project.id,type:"spec"};m(f.project.specs,e)})})}).then(()=>{r.definition.project=f.project.id,r.definition.seen=new Date,r.definition.label||(r.definition.label=f.project.name+" runtime")}).then(()=>{if(o.component){if(f.component=l(o.component,f.project),!f.component)throw new Error(`Component ${o.component} not found`);return}const t=u(o.graph||f.project.main,f.project);if(!t)throw new Error(`Graph ${o.graph||f.project.main} not found`);m(f.graphs,t)}).then(()=>i(r,f)).then(()=>e.send({out:f,project:f.project})).then(()=>{f.project.graphs.forEach(t=>{e.send({graph:t})}),f.project.components.forEach(t=>{e.send({component:t})}),f.project.specs.forEach(t=>{e.send({spec:t})})}).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),s=o(29);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("project",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("hash",{datatype:"array"}),t.process((t,e)=>{if(!t.hasData("in","project"))return;const[o,r]=t.getData("in","project");e.send({out:r}),o.state.project||r.runtime?e.done():s.getProjectHash(r,(t,o)=>{t?e.done():e.sendDone({hash:o})})})}},function(t,e,o){const r=o(3),{findProject:s,findGraph:n,findComponent:p,findByComponent:c}=o(29);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");if(!(null!=o.state.projects?o.state.projects.length:void 0))return void e.done(new Error("No projects found"));const r={state:"",project:null,runtime:null,component:null,graphs:[],remote:[]};if(r.project=s(o.payload.project,o.state.projects),!r.project)return void e.done(new Error(`Project ${o.payload.project} not found`));if(o.payload.component)return r.component=p(o.payload.component,r.project),r.component?(r.state="ok",void e.sendDone({out:r})):void e.done(new Error(`Component ${o.payload.component} not found`));const a=n(o.payload.graph,r.project);if(!a)return void e.done(new Error(`Graph ${o.payload.graph} not found`));r.graphs.push(a);let i=a;for(;o.payload.nodes.length;){let t;const s=o.payload.nodes.shift();if("object"!=typeof i)r.remote.push(s);else{const n=i.getNode(s);if(!n)return void e.done(new Error(`Node ${s} not found`));if(!n.component)return void e.done(new Error(`Node ${s} has no component defined`));if([t,i]=c(n.component,r.project),"component"===t){if(r.component=i,o.payload.nodes.length)return void e.done(new Error(`Component ${s} cannot have subnodes`));break}"runtime"===t?r.remote.push(s):r.graphs.push(i)}}r.state=r.remote.length?"loading":"ok",e.sendDone({out:r})})}},function(t,e,o){const r=o(3),{getGraphType:s,getComponentType:n,getRemoteNodes:p,ensureIframe:c,graphRuntimeIdentifier:a}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client");o.project.runtime?e.done(new Error("Runtime projects must be accessed via runtime")):((null!=o.remote?o.remote.length:void 0)&&(o.state="loading"),e.send({out:o}),Promise.resolve().then(()=>c(r,o.project)).then(()=>r.connect()).then(()=>((t,e,o=null)=>{const r=e.filter(e=>[null,t.definition.type].includes(n(e)));return Promise.all(r.map(e=>t.protocol.component.source({name:e.name,language:e.language,library:o||t.definition.namespace,code:e.code})))})(r,o.project.components,o.project.namespace)).then(()=>((t,e,o=null)=>{const r=e.filter(e=>s(e)===t.definition.type);return r.sort((t,e)=>{if(t.properties.main)return 1;if(e.properties.main)return-1;const r=a(t,o),s=a(e,o);if(t.nodes.find(t=>t.component===s))return 1;return e.nodes.find(t=>t.component===r)?-1:0}),r.reduce((e,r)=>e.then(()=>t.protocol.graph.send({...r,name:a(r,o),properties:{...r.properties,library:o}},r.properties.main)),Promise.resolve([]))})(r,o.project.graphs,o.project.namespace)).then(()=>(null!=o.graphs?o.graphs.length:void 0)?(r.transport.graph===o.graphs[0]||r.transport.setMain(o.graphs[0]),Promise.resolve()):Promise.resolve()).then(()=>p(r,o)).then(()=>"loading"!==o.state?Promise.resolve():(o.state="ok",e.send({out:o}))).then(()=>e.done(),t=>e.done(t)))})}},function(t,e,o){const r=o(3),{getGraphType:s,getComponentType:n,isDefaultRuntime:p}=o(17),c=(t,e)=>{const o=(t=>{if(t.graphs.length){const e=s(t.graphs[0]);if(e)return e}if(t.component){const e=n(t.component);if(e)return e}return t.project&&t.project.type?t.project.type:"all"})(t);return e.filter(t=>"all"===o||t.type===o)};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("runtimes",{datatype:"array"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("skipped",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","runtimes"))return;const[o,r]=t.getData("in","runtimes");o.compatible=c(o,r),o.runtime=((t,e)=>{if(t.runtime)return t.runtime;if(!e.length)return null;const[o]=e.filter(e=>{if(t.project&&e.project){if(p(e))return!0;if(e.project!==t.project.id)return!1}return!(!t.project||e.project!==t.project.id)||"iframe"===e.protocol});return o||null})(o,o.compatible),o.runtime?e.sendDone({out:o}):e.sendDone({skipped:o})})}},function(t,e,o){const r=o(3),{v4:s}=o(32);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("runtimes",{required:!0,datatype:"array"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("new",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","runtimes"))return;const[o,r]=t.getData("in","runtimes");if(!o.runtime)return void e.done(new Error("No runtime defined"));"string"==typeof o.runtime&&"endpoint?"===o.runtime.substr(0,9)&&(o.runtime=(t=>{const e={};return t.split("&").forEach(t=>{const[o,r]=t.split("=");e[o]=r}),e.protocol&&e.address?e:null})(o.runtime.substr(9)));const n=((t,e)=>{if(!e||!e.length)return null;let o=t;return"string"==typeof t&&(o={id:t}),e.find(t=>t.id===o.id||!o.id&&o.protocol===t.protocol&&o.address===t.address)})(o.runtime,r);if(!n)return o.runtime.id||(o.runtime.id=s()),e.send({new:o.runtime}),e.send({out:o}),void e.done();o.runtime=n,e.send({out:o}),e.done()})}},function(t,e,o){const r=o(3),{v4:s}=o(32),n=(t,e,o,s,p)=>{if(!t.length)return void p();const c=t.shift();c.remote?(s.send({repository:new r.IP("data",e,{scope:o}),sha:new r.IP("data",c.remote.sha,{scope:o})}),setTimeout(()=>n(t,e,o,s,p),100)):n(t,e,o,s,p)};e.getComponent=()=>{const t=new r.Component;return t.description="Prepare a set of blob fetching requests for an operations object",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("repository",{datatype:"string"}),t.outPorts.add("sha",{datatype:"string"}),t.process((t,e)=>{if(!t.hasData("in"))return;const o=t.getData("in");if(0===o.pull.length)return void e.done();const p=s();e.send({out:new r.IP("data",o,{scope:p})}),e.send({sha:new r.IP("openBracket",p,{scope:p})});const c=o.pull.slice(0);n(c,o.repo,p,e,()=>{e.send({sha:new r.IP("closeBracket",p,{scope:p})}),e.done()})})}},function(t,e,o){const r=o(3),s=(t,e)=>{if(["component","spec"].includes(t))return e.code;const o=e.toJSON();return delete o.properties.sha,delete o.properties.id,delete o.properties.project,delete o.properties.changed,JSON.stringify(o,null,4)};e.getComponent=()=>{const t=new r.Component;return t.description="Prepare a GitHub tree for an operations object",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("repository",{datatype:"string"}),t.outPorts.add("tree",{datatype:"array"}),t.outPorts.add("basetree",{datatype:"string"}),t.outPorts.add("parentcommits",{datatype:"array"}),t.outPorts.add("message",{datatype:"string"}),t.outPorts.add("ref",{datatype:"string"}),t.process((t,e)=>{const o=t.getData("in");var r;(null!=o.push?o.push.length:void 0)?e.sendDone({out:o,basetree:o.tree,tree:(r=o.push,r.map(t=>{return{path:(e=t.type,o=t.path,"graph"!==e?o:o.replace(".fbp",".json")),content:s(t.type,t.local),mode:"100644"};var e,o})),repository:o.repo,parentcommits:[o.commit],message:o.message,ref:o.ref}):e.done()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[,o]=t.getData("in","client");o.disconnect().then(()=>o.connect()).then(()=>e.send({out:o.definition})).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("pass",{datatype:"object"}),t.outPorts.add("updated",{datatype:"object"}),t.outPorts.add("invalid",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");if(!o||!o["flowhub-token"])return void e.sendDone({pass:o});if(!navigator.onLine)return void e.sendDone({pass:o});const r=new XMLHttpRequest;r.onreadystatechange=()=>{let t;if(4===r.readyState)if(401!==r.status)if(200===r.status){try{t=JSON.parse(r.responseText)}catch(t){return void e.done(t)}JSON.stringify(t)!==JSON.stringify(o["flowhub-user"])?e.sendDone({updated:t}):e.sendDone({pass:o})}else try{const t=JSON.parse(r.responseText);e.done(new Error(t.message||"User fetching failed with "+r.status))}catch(t){e.done(new Error(r.responseText))}else e.sendDone({invalid:o})},r.open("GET","https://api.flowhub.io/user",!0),r.setRequestHeader("Authorization","Bearer "+o["flowhub-token"]),r.send(null)})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("user",{datatype:"object",required:!0,control:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","user"))return;const[o,r]=t.getData("in","user");if(!r||!r["flowhub-token"])return void e.sendDone({out:o});const s=new XMLHttpRequest;s.onreadystatechange=()=>{if(4===s.readyState){if(![200,201,404].includes(s.status)){let{message:t}=JSON.parse(s.responseText);return-1!==t.indexOf('"message":')&&({message:t}=JSON.parse(t)),void e.done(new Error(t))}e.sendDone({out:o})}},s.open("DELETE","https://api.flowhub.io/projects/"+o.id,!0),s.setRequestHeader("Authorization","Bearer "+r["flowhub-token"]),s.send()})}},function(t,e,o){const r=o(3),s=o(88);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("user",{datatype:"object",required:!0,control:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","user"))return;const[o,r]=t.getData("in","user");if(!r||!r["flowhub-token"])return void e.sendDone({out:o});new s.Runtime(o,{host:"https://api.flowhub.io"}).del(r["flowhub-token"],t=>{t&&e.done(t),e.sendDone({out:o})})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("route",{datatype:"object"}),t.outPorts.add("redirect",{datatype:"string"}),t.outPorts.add("missed",{datatype:"bang"}),t.process((t,e)=>{const{payload:o}=t.getData("in"),r=(t=>{const e={route:"",subroute:"open",runtime:null,project:null,graph:null,component:null,nodes:[]};if(""===t)return e.route="main",e;const o=t.split("/").map(t=>decodeURIComponent(t));switch(o.shift()){case"project":return e.route="storage",e.project=o.shift(),"component"===o[0]&&2===o.length?([,e.component]=o,e):(e.graph=o.shift(),e.nodes=o,e);case"example":return{route:"redirect",url:"gist/"+o.join("/")};case"gist":return e.route="github",e.subroute="gist",e.graph=o.shift(),e.remote=o,e;case"github":{e.route="github";const[t,r]=o.splice(0,2);return e.repo=`${t}/${r}`,e.branch="master",o.length?"tree"===o[0]?(o.shift(),e.branch=o.join("/"),e):("blob"===o[0]&&(o.shift(),e.branch=o.shift(),"graphs"===o[0]&&([,e.graph]=o),"components"===o[0]&&([,e.component]=o)),e):e}case"runtime":return e.route="runtime",e.runtime=o.shift(),"component"===o[0]&&2===o.length?([,e.component]=o,e):(e.graph=o.shift(),e.nodes=o,e);default:return{route:"redirect",url:""}}})(o);if(!r)return void e.sendDone({missed:{payload:r}});if("redirect"===r.route)return void e.sendDone({redirect:"#"+r.url});const s=`${r.route}:${r.subroute}`;delete r.subroute,e.sendDone({route:{action:s,payload:r}})})}},function(t,e,o){const r=o(3),s=o(124);e.getComponent=()=>{const t=new r.Component;return t.description="Execute fbp-spedc tests in the project",t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client"),{project:n}=o,p=n.specs.filter(t=>"yaml"===t.language&&t.code).map(t=>{try{return s.testsuite.loadYAML(t.code)}catch(t){return[]}}).reduce((t,e)=>t.concat(e),[]);p.length||e.done(),e.send({out:[...p]}),r.connect().then(()=>new Promise((t,o)=>{const n=new s.runner.Runner(r);s.runner.runAll(n,p,()=>{e.send({out:p})},e=>{e?o(e):t()})})).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),s=o(149),n=o(14)("noflo-ui:reducer:runtime"),{componentForLibrary:p}=o(17),c=o(8),a=(t,e,o,r)=>{const n=t.runtimeEvents||{};return e?(n[e]||(n[e]=new s(400)),n[e].enq({type:o,payload:r}),n):n},i=(t,e,o)=>{const r=t||{};if(!e)return r;if(!r[e])return r;const n=r[e].toarray().filter(o);return n.reverse(),r[e]=new s(400),n.forEach(t=>{r[e].enq(t)}),r};e.getComponent=()=>{const t=new r.Component;return t.icon="cogs",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("context",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in"))return;const o=t.getData("in");switch(o.action){case"runtime:opening":return void e.sendDone({context:{state:"loading"}});case"runtime:opened":return void e.sendDone({context:{...o.payload}});case"runtime:components":{const t=o.state.componentLibraries||{};return t[o.payload.runtime]=o.payload.components.map(p),void e.sendDone({context:{componentLibraries:t}})}case"runtime:component":{const t=o.state.componentLibraries||{};return t[o.payload.runtime]=t[o.payload.runtime]||[],c.addToList(t[o.payload.runtime],p(o.payload.component)),void e.sendDone({context:{componentLibraries:t}})}case"runtime:status":{const t=o.state.runtimeStatuses||{},r=t[o.payload.runtime];let s=o.state.runtimeEvents||{};r&&r.online&&!o.payload.status.online&&(s=a(o.state,o.payload.runtime,"disconnected",o.payload.status)),r&&r.online||!o.payload.status.online||(s=a(o.state,o.payload.runtime,"connected",o.payload.status)),t[o.payload.runtime]=o.payload.status;const n={runtimeStatuses:t,runtimeEvents:s};if(!o.payload.status.online){const t=o.state.runtimeExecutions||{};t[o.payload.runtime]=o.payload.status,t[o.payload.runtime].running=!1,t[o.payload.runtime].label="not running",n.runtimeExecutions=t}return void e.sendDone({context:n})}case"runtime:started":{const t=o.state.runtimeExecutions||{};let r=o.state.runtimeEvents||{};return t[o.payload.runtime]=o.payload.status,t[o.payload.runtime].label="running",o.payload.status.running||(t[o.payload.runtime].label="finished"),r=a(o.state,o.payload.runtime,"started "+o.payload.status.graph,o.payload.status),void e.sendDone({context:{runtimeExecutions:t,runtimeEvents:r}})}case"runtime:stopped":{const t=o.state.runtimeExecutions||{};let r=o.state.runtimeEvents||{};return t[o.payload.runtime]=o.payload.status,t[o.payload.runtime].running=!1,t[o.payload.runtime].label="not running",r=a(o.state,o.payload.runtime,"stopped "+o.payload.status.graph,o.payload.status),void e.sendDone({context:{runtimeExecutions:t,runtimeEvents:r}})}case"runtime:packet":{const t=((t,e,o)=>{const r=o,n=t.runtimePackets||{};return e?(n[e]||(n[e]=new s(400)),delete r.runtime,n[e].enq(r),n):n})(o.state,o.payload.runtime,o.payload.packet);return void e.sendDone({context:{runtimePackets:t}})}case"runtime:processerror":{const t=a(o.state,o.payload.runtime,"processerror",o.payload.error);return void e.sendDone({context:{runtimeEvents:t}})}case"runtime:networkerror":{const t=a(o.state,o.payload.runtime,"networkerror",o.payload.error);return void e.sendDone({context:{runtimeEvents:t}})}case"runtime:protocolerror":{const t=a(o.state,o.payload.runtime,"protocolerror",o.payload.error);return void e.sendDone({context:{runtimeEvents:t}})}case"runtime:output":{const t=a(o.state,o.payload.runtime,"output",o.payload.output);return void e.sendDone({context:{runtimeEvents:t}})}case"runtime:icon":{const t=o.state.runtimeIcons||{};t[o.payload.runtime]||(t[o.payload.runtime]={}),t[o.payload.runtime][o.payload.icon.graph]||(t[o.payload.runtime][o.payload.icon.graph]={});return t[o.payload.runtime][o.payload.icon.graph][o.payload.icon.id]=o.payload.icon.icon,void e.sendDone({context:{runtimeIcons:t}})}case"runtime:testsuites":return void e.sendDone({context:{suites:o.payload}});case"runtime:error":{let t=o.payload.runtime;!t&&o.state.runtime&&(t=o.state.runtime.id);const r=a(o.state,t,"error",o.payload);return e.send({context:{runtimeEvents:r}}),void e.sendDone({context:{state:"error",error:o.payload}})}case"runtime:clearevents":{const t=i(o.state.runtimeEvents,o.payload.runtime,t=>!(!o.payload.type||t.type===o.payload.type)||(!(!o.payload.graph||t.payload.graph===o.payload.graph)||!(!o.payload.id||t.payload.id===o.payload.id)));return void e.send({context:{runtimeEvents:t}})}case"runtime:clearpackets":{const t=i(o.state.runtimePackets,o.payload.runtime,t=>{if(o.payload.type&&t.type!==o.payload.type)return!0;if(o.payload.graph&&t.graph!==o.payload.graph)return!0;if(null!=o.payload.edge?o.payload.edge.from:void 0){if(!t.src)return!0;if(t.src.node!==o.payload.edge.from.node)return!0;if(t.src.port!==o.payload.edge.from.port)return!0}if(null!=o.payload.edge?o.payload.edge.to:void 0){if(!t.tgt)return!0;if(t.tgt.node!==o.payload.edge.to.node)return!0;if(t.tgt.port!==o.payload.edge.to.port)return!0}return!1});return void e.send({context:{runtimePackets:t}})}default:n("Unknown action "+o.action)}})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("project",{datatype:"object"}),t.outPorts.add("graph",{datatype:"object"}),t.outPorts.add("component",{datatype:"object"}),t.outPorts.add("runtime",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{t.hasData("in","client")&&(t.getData("in","client"),e.done(new Error("Edit as Project is no longer supported")))})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("nodes",{datatype:"array"}),t.outPorts.add("context",{datatype:"object"}),t.process((t,e)=>{const o={searchGraphResult:t.getData("nodes")};e.sendDone({context:o})})}},function(t,e,o){const r=o(3),{getComponentType:s}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("project",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","project","client"))return;const[o,r,n]=t.getData("in","project","client"),{component:p}=o,c=s(p);if(c&&c!==n.definition.type)return void e.done();let a=p.tests||"";r.specs.forEach(t=>{t.name===p.name&&(a=t.code)}),n.connect().then(()=>n.protocol.component.source({name:p.name,language:p.language,library:(null!=r?r.namespace:void 0)||n.definition.namespace,code:p.code,tests:a})).then(t=>e.send({out:{component:t,runtime:n.definition.id}})).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"bang"}),t.outPorts.add("out",{datatype:"string"}),t.process((t,e)=>{t.hasData("in")&&(t.getData("in"),e.sendDone({out:window.location.href.split("#")[1]||""}))})}},function(t,e,o){const r=o(3),{graphRuntimeIdentifier:s}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("client",{datatype:"object"}),t.inPorts.add("graphs",{datatype:"array"}),t.inPorts.add("project",{datatype:"object"}),t.inPorts.add("edges",{datatype:"array"}),t.outPorts.add("out",{datatype:"array"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("client","graphs","project","edges"))return;const[o,r,n,p]=t.getData("client","graphs","project","edges");if(e.send({out:p}),!r.length)return void e.done(new Error("No graph specified"));const c=r[r.length-1],a=n?n.namespace:null;o.protocol.network.edges({graph:s(c,a),edges:p.map(t=>({src:t.from,tgt:t.to}))}).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),{getGraphType:s,graphRuntimeIdentifier:n}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("project",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","project","client"))return;const[o,r]=t.getData("in","client"),p=t.getData("project"),c=s(o.graph);if(c&&c!==r.definition.type)return void e.done();const a=o.changes.map(t=>{const e=t;return e.event=t.event.toLowerCase(),e}).filter(t=>r.protocol.graph[t.event]);r.connect().then(()=>Promise.all(a.map(t=>r.protocol.graph[t.event](((t,e,o,r)=>{const s={};return Object.keys(e).forEach(o=>{const r=e[o];"from"!==o||-1===t.indexOf("edge")&&-1===t.indexOf("initial")?"to"!==o||-1===t.indexOf("edge")&&-1===t.indexOf("initial")?"metadata"===o&&["removenode","removeedge","removeinitial","removeinport","removeoutport","removegroup"].includes(t)||"nodes"===o&&["changegroup","removegroup"].includes(t)||["node","port"].includes(o)&&["removeinport","removeoutport"].includes(t)||"component"===o&&["changenode","removenode"].includes(t)||("metadata"===o&&r&&(s.metadata={},Object.keys(r).forEach(t=>{const e=r[t];"route"===t&&null===e||(s.metadata[t]=e)})),s[o]=r):s.tgt=r:s.src=r}),s.graph=n(o,r),s})(t.event,t.payload,o.graph,p.namespace)).catch(t=>"Requested graph not found"===t.message?r.protocol.graph.send({...o.graph,name:n(o.graph,p.namespace),properties:{...o.graph.properties,library:p.namespace}},o.graph.properties.main):Promise.reject(t))))).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),{getGraphType:s,graphRuntimeIdentifier:n}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client"),{graph:p,project:c}=o,a=s(p);if(a&&a!==r.definition.type)return void e.done();const i=c?c.namespace:null;r.connect().then(()=>r.protocol.graph.send({...p,name:n(p,i),properties:{...p.properties,library:i}},p.properties.main)).then(()=>e.sendDone({out:o}),t=>e.done(t))})}},function(t,e,o){const r=o(3),{graphRuntimeIdentifier:s}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client"),{currentGraph:n,subgraph:p,nodes:c,project:a}=o,i=a?a.namespace:null,d=[],u={},l=(t,e)=>{const o=`${t}_${e}`;if(u[o])return u[o];if(-1===d.indexOf(e))return d.push(e),u[o]=e,e;const r=o.replace(/(.*)\/(.*)(_.*)\.(.*)/,"$2_$4").toLowerCase();return d.push(r),u[o]=r,r};p.startTransaction("newsubgraph"),p.setProperties({id:`${a.id}/${p.name.replace(" ","_")}`,project:a.id,main:!1}),c.forEach(t=>{const e=n.getNode(t);p.addNode(e.id,e.component,e.metadata)}),n.edges.forEach(t=>{p.getNode(t.from.node)&&p.getNode(t.to.node)&&p.addEdge(t.from.node,t.from.port,t.to.node,t.to.port,t.metadata)}),n.initializers.forEach(t=>{p.getNode(t.to.node)&&p.addInitial(t.from.data,t.to.node,t.to.port,t.metadata)}),n.edges.forEach(t=>{if(!p.getNode(t.from.node)&&p.getNode(t.to.node)){const e=l(t.to.node,t.to.port);p.addInport(e,t.to.node,t.to.port)}if(p.getNode(t.from.node)&&!p.getNode(t.to.node)){const e=l(t.from.node,t.from.port);p.addOutport(e,t.from.node,t.from.port)}}),p.endTransaction("newsubgraph"),r.connect().then(()=>function(t,e,o,r=!1){return t.protocol.graph.send({...e,name:s(e,o),properties:{...e.properties,library:o}},r)}(r,p,i,!1)).then(()=>new Promise(t=>setTimeout(t,10))).then(()=>{n.startTransaction("subgraph");const t=a.namespace?`${a.namespace}/${p.name}`:p.name,e=n.getNode(c[0]).metadata,o=p.properties.id;n.addNode(o,t,{label:p.name,x:e.x,y:e.y}),n.edges.forEach(t=>{if(!p.getNode(t.from.node)&&p.getNode(t.to.node)){const e=l(t.to.node,t.to.port);n.addEdge(t.from.node,t.from.port,o,e,t.metadata)}if(p.getNode(t.from.node)&&!p.getNode(t.to.node)){const e=l(t.from.node,t.from.port);n.addEdge(o,e,t.to.node,t.to.port,t.metadata)}}),c.forEach(t=>{n.removeNode(t)}),n.endTransaction("subgraph")}).then(()=>{e.sendDone({out:p})},t=>e.done(t))})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("action",{datatype:"string",required:!0,control:!0}),t.inPorts.add("in",{datatype:"all"}),t.outPorts.add("out",{datatype:"all",scoped:!1}),t.process((t,e)=>{if(!t.hasData("in","action"))return;const[o,r]=t.getData("action","in");e.sendDone({out:{action:o,payload:r}})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.icon="indent",t.inPorts.add("context",{datatype:"object"}),t.inPorts.add("key",{datatype:"string",control:!0,required:!0}),t.inPorts.add("value",{datatype:"all"}),t.outPorts.add("context",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("context","key","value"))return;const[o,r,s]=t.getData("context","key","value");o[r]=s,e.sendDone({context:o})})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"bang"}),t.process((t,e)=>{const{payload:o}=t.getData("in");window.location.href=o,e.sendDone({out:!0})})}},function(t,e,o){const r=o(3),{hashToString:s}=o(30);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"bang"}),t.process((t,e)=>{const{payload:o}=t.getData("in");window.location.hash=s(o),e.sendDone({out:!0})})}},function(t,e,o){const r=o(3),{graphRuntimeIdentifier:s}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client"),n=o.project?o.project.namespace:null;r.connect().then(()=>r.protocol.network.start({graph:s(o.graph,n)})).then(t=>e.send({out:{status:t,runtime:r.definition.id}})).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),s=o(14)("noflo-ui:state");e.getComponent=()=>{const t=new r.Component;return t.icon="database",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("state",{datatype:"object"}),t.outPorts.add("updated",{datatype:"object"}),t.state={},t.tearDown=e=>{t.state={},e()},t.process((e,o)=>{if(!e.hasData("in"))return;const r=e.getData("in");Object.keys(r).forEach(e=>{const o=r[e];t.state[e]!==o&&(s(e+" changed",t.state[e],o),t.state[e]=o)}),o.sendDone({state:t.state,updated:r})})}},function(t,e,o){const r=o(3),{graphRuntimeIdentifier:s}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("client",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","client"))return;const[o,r]=t.getData("in","client"),n=o.project?o.project.namespace:null;r.connect().then(()=>r.protocol.network.stop({graph:s(o.graph,n)})).then(t=>e.send({out:{status:t,runtime:r.definition.id}})).then(()=>e.done(),t=>e.done(t))})}},function(t,e,o){const r=o(3),s=o(8),n=(t,e)=>{const o=(null!=t.properties?t.properties.project:void 0)||t.project;if(!o)return null;const r=e.filter(t=>t.id===o);return r.length?r[0]:null};e.getComponent=()=>{const t=new r.Component;return t.icon="database",t.inPorts.add("in",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{const o=t.getData("in");switch(o.action){case"storage:db":{const t=o.state||{};return t.db=o.payload,void e.sendDone({out:t})}case"storage:opened":return void e.sendDone({out:o.payload});case"storage:stored:initial":{const t=o.payload;return t.storedGraphs=t.graphs,delete t.graphs,t.projects.sort(s.sortByName),t.storedGraphs.sort(s.sortByName),t.components.sort(s.sortByName),t.specs.sort(s.sortByName),t.runtimes.sort(s.sortBySeen),t.projects.forEach(e=>{const o=e;o.graphs=t.storedGraphs.filter(t=>t.properties.project===o.id),o.components=t.components.filter(t=>t.project===o.id),o.specs=t.specs.filter(t=>t.project===o.id)}),void e.sendDone({out:t})}case"storage:stored:project":{const t={},r=o.payload;return r.graphs||(r.graphs=[]),o.state.storedGraphs&&!r.graphs.length&&(r.graphs=o.state.storedGraphs.filter(t=>t.properties.project===r.id)),r.components||(r.components=[]),o.state.components&&!r.components.length&&(r.components=o.state.components.filter(t=>t.project===r.id)),r.specs||(r.specs=[]),o.state.specs&&!r.specs.length&&(r.specs=o.state.specs.filter(t=>t.project===r.id)),t.projects=o.state.projects||[],s.addToList(t.projects,r),void e.sendDone({out:t})}case"storage:removed:project":{const t={};return t.projects=o.state.projects||[],s.removeFromList(t.projects,{id:o.payload}),void e.sendDone({out:t})}case"storage:stored:graph":{const t={};t.storedGraphs=o.state.storedGraphs||[],s.addToList(t.storedGraphs,o.payload),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.addToList(r.graphs,o.payload),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:removed:graph":{const t={};t.storedGraphs=o.state.storedGraphs||[],s.removeFromList(t.storedGraphs,{properties:{id:o.payload}}),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.removeFromList(r.graphs,{properties:{id:o.payload}}),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:stored:component":{const t={};t.components=o.state.components||[],s.addToList(t.components,o.payload),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.addToList(r.components,o.payload),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:removed:component":{const t={};t.components=o.state.components||[],s.removeFromList(t.components,{id:o.payload}),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.removeFromList(r.components,{id:o.payload}),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:stored:spec":{const t={};t.specs=o.state.specs||[],s.addToList(t.specs,o.payload),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.addToList(r.specs,o.payload),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:removed:spec":{const t={};t.specs=o.state.specs||[],s.removeFromList(t.specs,{id:o.payload}),t.projects=o.state.projects||[];const r=n(o.payload,t.projects);return r?(s.removeFromList(r.specs,{id:o.payload}),void e.sendDone({out:t})):void e.sendDone({out:t})}case"storage:stored:runtime":{const t={};return t.runtimes=o.state.runtimes||[],s.addToList(t.runtimes,o.payload,s.sortBySeen),void e.sendDone({out:t})}case"storage:removed:runtime":{const t={};return t.runtimes=o.state.runtimes||[],s.removeFromList(t.runtimes,{id:o.payload}),void e.sendDone({out:t})}case"storage:error":{const t={state:"error",error:o.payload};return void e.sendDone({out:t})}default:e.done()}})}},function(t,e,o){const r=o(3),s=o(14)("noflo-ui:store"),n=o(14)("noflo-ui:store:error");e.getComponent=()=>{const t=new r.Component;return t.icon="rocket",t.inPorts.add("action",{datatype:"all"}),t.inPorts.add("state",{datatype:"object"}),t.outPorts.add("pass",{datatype:"object",scoped:!1}),t.state={},t.tearDown=e=>{t.state={},e()},t.forwardBrackets={},t.process((e,o)=>{if(e.hasData("state"))return t.state=e.getData("state"),void o.done();if(!e.hasStream("action"))return;e.getStream("action").filter(t=>"data"===t.type).map(t=>t.data).forEach(e=>{e.action?(e.state?t.state=e.state:s(e.action+" was sent without state, using previous state"),o.send({pass:{action:e.action,state:t.state,payload:e.payload}})):n("Received action without expected payload",e)}),o.done()})}},function(t,e,o){const r=o(3);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("user",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","user"))return;const[o,r]=t.getData("in","user");if(!r||!r["flowhub-token"])return void e.sendDone({out:o});const s=new XMLHttpRequest;s.onreadystatechange=()=>{if(4===s.readyState){if(![200,201].includes(s.status)){let{message:t}=JSON.parse(s.responseText);return-1!==t.indexOf('"message":')&&({message:t}=JSON.parse(t)),void e.done(new Error(t))}e.sendDone({out:o})}};const n=JSON.stringify({repo:o.repo,active:!0});s.open("POST","https://api.flowhub.io/projects",!0),s.setRequestHeader("Authorization","Bearer "+r["flowhub-token"]),s.setRequestHeader("Content-Type","application/json;charset=UTF-8"),s.send(n)})}},function(t,e,o){const r=o(3),s=o(88),{isDefaultRuntime:n}=o(17);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("user",{datatype:"object",required:!0,control:!0}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","user"))return;const[o,r]=t.getData("in","user");if(["opener","microflo"].includes(o.protocol))return void e.sendDone({out:o});if(n(o))return void e.sendDone({out:o});if(!(r&&r["flowhub-token"]&&r["flowhub-user"]&&r["flowhub-user"].id))return void e.sendDone({out:o});const p=o;p.user=r["flowhub-user"].id,o.secret||(p.secret=null);new s.Runtime(o,{host:"https://api.flowhub.io"}).register(r["flowhub-token"],t=>{t?e.done(t):e.sendDone({out:o})})})}},function(t,e,o){const r=o(3),s=o(57);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("user",{datatype:"object"}),t.outPorts.add("user",{datatype:"object"}),t.outPorts.add("redirect",{datatype:"string"}),t.process((t,e)=>{const o=t.getData("user"),r=(null!=o.plan?o.plan.type:void 0)||"free",n=(null!=o.github?o.github.token:void 0)||"",p=(null!=o.github?o.github.username:void 0)||"";((t,e)=>{if(!t)return void e(null,null);const o=new XMLHttpRequest,r=new FileReader;o.open("GET",t,!0),o.responseType="blob",o.onload=()=>200!==o.status?e(new Error("Avatar request returned "+o.status)):(r.onload=t=>e(null,t.target.result),r.readAsDataURL(o.response)),o.onerror=()=>e(new Error("Avatar request failed")),o.send()})(o.avatar,(t,c)=>{const a={"flowhub-avatar":c,"flowhub-plan":r,"flowhub-token":n,"flowhub-user":JSON.stringify(o),"github-token":n,"github-username":p};c||delete a["flowhub-avatar"],Object.keys(a).forEach(t=>{const e=a[t];localStorage.setItem(t,e)}),a["flowhub-user"]=o,e.send({user:a}),(t=>{const e=s.parse(window.location.href);delete e.search;const o=s.format(e);if(o!==e)return(null!=window.history?window.history.replaceState:void 0)?(window.history.replaceState({},"clear",e.pathname),void t.done()):void t.sendDone({redirect:o});t.done()})(e)})})}},function(t,e,o){const r=o(3),s=["flowhub-theme","flowhub-debug"];e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("user",{datatype:"object"}),t.outPorts.add("out",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","user"))return;const[o,r]=t.getData("in","user"),n=Object.keys(o);for(let t=0;t<n.length;t+=1){const p=n[t],c=o[p];if(-1===s.indexOf(p))return void e.done(new Error(p+" is not a valid preference"));localStorage.setItem(p,c),r[p]=c}e.sendDone({out:r})})}},function(t,e,o){const r=o(3),s=o(35),n=(t,e,o,r)=>((t,e,o)=>{const r=s.api();r.token(e);const n=r.get(t);return n.on("success",t=>{t.body?o(null,t.body):o(new Error("No result received"))}),n.on("error",t=>o(t.body)),n()})(`/repos/${t}/git/trees/${e}`,o,r),p=(t,e,o,r,s,c)=>{const a=[],i=[];e.tree.forEach(e=>{const r=e;r.fullPath=`${t}${r.path}`,"tree"!==r.type?o.forEach(t=>{const e=t;if(r.fullPath===e.path||r.fullPath===e.path.replace(".fbp",".json")){if("graph"===e.type)return e.local.properties.sha=r.sha,e.local.properties.changed=!1,i.push(e),void c.send({graph:e.local});e.local.sha=r.sha,e.local.changed=!1,i.push(e),"spec"!==e.type?c.send({component:e.local}):c.send({spec:e.local})}}):a.push(r)}),i.forEach(t=>{o.splice(o.indexOf(t),1)}),0!==o.length?a.forEach(t=>n(r,t.sha,s,(e,n)=>{e?c.done(e):p(t.fullPath+"/",n,o,r,s,c)})):c.done()};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("in",{datatype:"object"}),t.inPorts.add("tree",{datatype:"object"}),t.inPorts.add("repository",{datatype:"string"}),t.inPorts.add("token",{datatype:"string",description:"GitHub API token",required:!0,control:!0}),t.outPorts.add("graph",{datatype:"object"}),t.outPorts.add("component",{datatype:"object"}),t.outPorts.add("spec",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("in","tree","repository","token"))return;const[o,r,s,n]=t.getData("in","tree","repository","token");r.tree&&(null!=o.push?o.push.length:void 0)?p("",r,o.push,s,n,e):e.done()})}},function(t,e,o){const r=o(3),s=o(35);e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("repository",{datatype:"string"}),t.inPorts.add("commit",{datatype:"string",description:"Commit SHA"}),t.inPorts.add("token",{datatype:"string",required:!0,scoped:!1,control:!0}),t.inPorts.add("reference",{datatype:"string",default:"heads/master",required:!0,control:!0}),t.inPorts.add("force",{datatype:"boolean",default:!1,required:!0,control:!0}),t.outPorts.add("reference",{datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("repository","commit","token","reference","force"))return;const[o,r,n,p,c]=t.getData("repository","commit","token","reference","force"),a=s.api();n&&a.token(n);let i=p||"heads/master";"refs/"===i.substr(0,5)&&(i=i.substr(5));const d=a.patch(`/repos/${o}/git/refs/${i}`,{sha:r,force:c});d.on("success",t=>{e.sendDone({reference:t.body})}),d.on("error",t=>e.done(t.error||t.body)),d()})}},function(t,e){t.exports={inports:{db:{process:"Write",port:"db"},store:{process:"Store",port:"in"},item:{process:"EnsureId",port:"in"}},outports:{item:{process:"Put",port:"value"},error:{process:"Errors",port:"out"}},groups:[],processes:{HoldMode:{component:"strings/SendString"},Store:{component:"core/Repeat"},Write:{component:"indexeddb/BeginTransaction"},GetStore:{component:"indexeddb/GetStore"},Put:{component:"indexeddb/Put"},EnsureId:{component:"ui/EnsureId"},Errors:{component:"core/Merge"}},connections:[{data:"readwrite",tgt:{process:"HoldMode",port:"string"}},{src:{process:"Store",port:"out"},tgt:{process:"HoldMode",port:"in"}},{src:{process:"HoldMode",port:"out"},tgt:{process:"Write",port:"mode"}},{src:{process:"Store",port:"out"},tgt:{process:"Write",port:"stores"}},{src:{process:"Store",port:"out"},tgt:{process:"GetStore",port:"name"}},{src:{process:"Write",port:"transaction"},tgt:{process:"GetStore",port:"transaction"}},{src:{process:"GetStore",port:"store"},tgt:{process:"Put",port:"store"}},{src:{process:"EnsureId",port:"out"},tgt:{process:"Put",port:"value"}},{src:{process:"Write",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"GetStore",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Put",port:"error"},tgt:{process:"Errors",port:"in"}}],caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{project:{process:"OriginalProject",port:"out"},graph:{process:"OriginalGraph",port:"out"},component:{process:"OriginalComponent",port:"out"},spec:{process:"OriginalSpec",port:"out"},runtime:{process:"OriginalRuntime",port:"out"},error:{process:"Errors",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},GetProjectsDb:{component:"ui/GetActionValues"},SaveProject:{component:"ui/Save"},ProjectsStore:{component:"strings/SendString"},OriginalProject:{component:"core/SendNext"},ConvertProject:{component:"ui/CleanProject"},Errors:{component:"core/Merge"},GetGraphsDb:{component:"ui/GetActionValues"},SaveGraph:{component:"ui/Save"},GraphsStore:{component:"strings/SendString"},OriginalGraph:{component:"core/SendNext"},ConvertGraph:{component:"objects/CallMethod"},GetComponentsDb:{component:"ui/GetActionValues"},SaveComponent:{component:"ui/Save"},ComponentsStore:{component:"strings/SendString"},OriginalComponent:{component:"core/SendNext"},GetSpecsDb:{component:"ui/GetActionValues"},SaveSpec:{component:"ui/Save"},SpecsStore:{component:"strings/SendString"},OriginalSpec:{component:"core/SendNext"},GetRuntimesDb:{component:"ui/GetActionValues"},SaveRuntime:{component:"ui/Save"},RuntimesStore:{component:"strings/SendString"},OriginalRuntime:{component:"core/SendNext"}},connections:[{data:"storage:save:project,storage:save:graph,storage:save:component,storage:save:spec,storage:save:runtime",tgt:{process:"Dispatch",port:"routes"}},{data:"db",tgt:{process:"GetProjectsDb",port:"keys"}},{src:{process:"GetProjectsDb",port:"values",index:0},tgt:{process:"SaveProject",port:"db"}},{data:"projects",tgt:{process:"ProjectsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"GetProjectsDb",port:"in"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"OriginalProject",port:"data"}},{src:{process:"SaveProject",port:"item"},tgt:{process:"OriginalProject",port:"in"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"ProjectsStore",port:"in"}},{src:{process:"ProjectsStore",port:"out"},tgt:{process:"SaveProject",port:"store"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"ConvertProject",port:"in"}},{src:{process:"ConvertProject",port:"out"},tgt:{process:"SaveProject",port:"item"}},{src:{process:"SaveProject",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetGraphsDb",port:"keys"}},{src:{process:"GetGraphsDb",port:"values",index:0},tgt:{process:"SaveGraph",port:"db"}},{data:"graphs",tgt:{process:"GraphsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"GetGraphsDb",port:"in"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"OriginalGraph",port:"data"}},{src:{process:"SaveGraph",port:"item"},tgt:{process:"OriginalGraph",port:"in"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"GraphsStore",port:"in"}},{src:{process:"GraphsStore",port:"out"},tgt:{process:"SaveGraph",port:"store"}},{data:"toJSON",tgt:{process:"ConvertGraph",port:"method"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"ConvertGraph",port:"in"}},{src:{process:"ConvertGraph",port:"out"},tgt:{process:"SaveGraph",port:"item"}},{src:{process:"SaveGraph",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetComponentsDb",port:"keys"}},{src:{process:"GetComponentsDb",port:"values",index:0},tgt:{process:"SaveComponent",port:"db"}},{data:"components",tgt:{process:"ComponentsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"GetComponentsDb",port:"in"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"OriginalComponent",port:"data"}},{src:{process:"SaveComponent",port:"item"},tgt:{process:"OriginalComponent",port:"in"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"ComponentsStore",port:"in"}},{src:{process:"ComponentsStore",port:"out"},tgt:{process:"SaveComponent",port:"store"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"SaveComponent",port:"item"}},{src:{process:"SaveComponent",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetSpecsDb",port:"keys"}},{src:{process:"GetSpecsDb",port:"values",index:0},tgt:{process:"SaveSpec",port:"db"}},{data:"specs",tgt:{process:"SpecsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetSpecsDb",port:"in"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"OriginalSpec",port:"data"}},{src:{process:"SaveSpec",port:"item"},tgt:{process:"OriginalSpec",port:"in"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"SpecsStore",port:"in"}},{src:{process:"SpecsStore",port:"out"},tgt:{process:"SaveSpec",port:"store"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"SaveSpec",port:"item"}},{src:{process:"SaveSpec",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetRuntimesDb",port:"keys"}},{src:{process:"GetRuntimesDb",port:"values",index:0},tgt:{process:"SaveRuntime",port:"db"}},{data:"runtimes",tgt:{process:"RuntimesStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GetRuntimesDb",port:"in"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"OriginalRuntime",port:"data"}},{src:{process:"SaveRuntime",port:"item"},tgt:{process:"OriginalRuntime",port:"in"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"RuntimesStore",port:"in"}},{src:{process:"RuntimesStore",port:"out"},tgt:{process:"SaveRuntime",port:"store"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"SaveRuntime",port:"item"}},{src:{process:"SaveRuntime",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Errors",port:"in"}}],caseSensitive:!1}},function(t,e,o){const r=o(3),s=o(126),n=(t,e,o)=>{const r=t,n=e;return r.id&&n[r.id]?Promise.resolve(n[r.id]):(r.secret||(r.secret=""),s(r,{skipValidation:!0,connectionTimeout:5e3}).then(t=>{if(o.send({instance:t}),!t.definition.id)return t;const e=r.id;return n[e]=t,t.isConnected()||t.once("connected",()=>{t.definition.id!==e&&(delete n[e],n[t.definition.id]=t)}),t}))};e.getComponent=()=>{const t=new r.Component;return t.description="Holder for runtime instances",t.inPorts.add("initial",{description:"Initialize client for all stored runtime definitions",datatype:"object"}),t.inPorts.add("updated",{description:"Update client instance for a runtime definition",datatype:"object"}),t.inPorts.add("in",{description:"Get client instance for a route definition",datatype:"object",addressable:!0}),t.outPorts.add("instance",{description:"Client instance when created",datatype:"object"}),t.outPorts.add("out",{description:"Route runtime client was matched for",datatype:"object",addressable:!0}),t.outPorts.add("client",{description:"Runtime client instance",datatype:"object",addressable:!0}),t.outPorts.add("updated",{description:"Updated runtime definition",datatype:"object"}),t.outPorts.add("error",{datatype:"object"}),t.clients={},t.tearDown=e=>(t.clients={},e()),t.process((e,o)=>{if(e.hasData("initial")){let r=e.getData("initial");return r||(r=[]),void Promise.all(r.map(e=>n(e,t.clients,o))).then(()=>o.done(),t=>o.done(t))}if(e.hasData("updated")){const r=e.getData("updated"),s=r.payload||r;s.secret||(s.secret=""),n(s,t.clients,o).then(()=>(o.send({updated:r}),o.done()),t=>o.done(t))}const s=e.attached("in").filter(t=>e.hasData(["in",t]));s.length&&Promise.all(s.map(r=>{const s=e.getData(["in",r]);if(!s.runtime)return Promise.reject(new Error("No runtime defined"));let{runtime:p}=s;return"string"==typeof p&&(p={id:p},s.runtime=p),n(p,t.clients,o).then(t=>({client:t,route:s,idx:r}))})).then(t=>(()=>{const e=[];return t.forEach(t=>{e.push(o.send({client:new r.IP("data",t.client,{index:t.idx}),out:new r.IP("data",t.route,{index:t.idx})}))}),e})()).then(()=>o.done(),t=>o.done(t))}),t}},function(t,e,o){const r=o(3),s=()=>{const t=localStorage.getItem("noflo-ui-graphs"),e=[];return t?(t.split(",").forEach(t=>{const o=(t=>{const e=localStorage.getItem(t);if(!e)return null;const o=JSON.parse(e);return o.id=t,o.project="",o})(t);o&&e.push(o)}),e):e};e.getComponent=()=>{const t=new r.Component;return t.inPorts.add("graphstore",{datatype:"object"}),t.process((t,e)=>{if(!t.hasData("graphstore"))return;const o=t.getData("graphstore");if("undefined"!=typeof chrome&&chrome.storage)return void e.done();try{localStorage.getItem("noflo")}catch(t){return void e.done()}const r=s();if(0===r.length)return void e.done();let n=0;const p=()=>{n+=1,n===r.length&&e.done()};r.forEach(t=>{o.put(t).onsuccess=p})})}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{context:{process:"MergeContext",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},CleanEdges:{component:"ui/CleanAction"},CreateEdgeCtx:{component:"objects/CreateObject"},SetEdges:{component:"ui/SetToContext"},MergeContext:{component:"core/Merge"},CleanNodes:{component:"ui/CleanAction"},CreateNodeCtx:{component:"objects/CreateObject"},SetNodes:{component:"ui/SetToContext"},CleanSearch:{component:"ui/CleanAction"},CleanSearchResults:{component:"ui/CleanAction"},CleanGraph:{component:"ui/CleanAction"},GetGraph:{component:"objects/GetObjectKey"},SendGraphKey:{component:"strings/SendString"},FindNodesInGraph:{component:"ui/FindNodesInGraph"},CleanSearchterm:{component:"ui/CleanAction"},GetSearchTerm:{component:"objects/GetObjectKey"},SendSearchKey:{component:"strings/SendString"},NodesToContext:{component:"ui/SearchGraphNodeToContext"}},connections:[{data:"context:edges,context:nodes,context:search_library,context:search_graph,context:search_library_result,context:graph",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CleanEdges",port:"in"}},{src:{process:"CleanEdges",port:"out"},tgt:{process:"CreateEdgeCtx",port:"start"}},{src:{process:"CreateEdgeCtx",port:"out"},tgt:{process:"SetEdges",port:"context"}},{data:"edges",tgt:{process:"SetEdges",port:"key"}},{src:{process:"CleanEdges",port:"out"},tgt:{process:"SetEdges",port:"value"}},{src:{process:"SetEdges",port:"context"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"CleanNodes",port:"in"}},{src:{process:"CleanNodes",port:"out"},tgt:{process:"CreateNodeCtx",port:"start"}},{src:{process:"CreateNodeCtx",port:"out"},tgt:{process:"SetNodes",port:"context"}},{data:"nodes",tgt:{process:"SetNodes",port:"key"}},{src:{process:"CleanNodes",port:"out"},tgt:{process:"SetNodes",port:"value"}},{src:{process:"SetNodes",port:"context"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"CleanSearch",port:"in"}},{src:{process:"CleanSearch",port:"out"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"CleanSearchResults",port:"in"}},{src:{process:"CleanSearchResults",port:"out"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"CleanGraph",port:"in"}},{src:{process:"CleanGraph",port:"out"},tgt:{process:"GetGraph",port:"in"}},{data:"graph",tgt:{process:"SendGraphKey",port:"string"}},{src:{process:"SendGraphKey",port:"out"},tgt:{process:"GetGraph",port:"key"}},{src:{process:"CleanGraph",port:"out"},tgt:{process:"SendGraphKey",port:"in"}},{src:{process:"GetGraph",port:"out"},tgt:{process:"FindNodesInGraph",port:"graph"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"CleanSearchterm",port:"in"}},{src:{process:"CleanSearchterm",port:"out"},tgt:{process:"GetSearchTerm",port:"in"}},{data:"search",tgt:{process:"SendSearchKey",port:"string"}},{src:{process:"SendSearchKey",port:"out"},tgt:{process:"GetSearchTerm",port:"key"}},{src:{process:"CleanSearchterm",port:"out"},tgt:{process:"SendSearchKey",port:"in"}},{src:{process:"GetSearchTerm",port:"out"},tgt:{process:"FindNodesInGraph",port:"search"}},{src:{process:"FindNodesInGraph",port:"nodes"},tgt:{process:"NodesToContext",port:"nodes"}},{src:{process:"NodesToContext",port:"context"},tgt:{process:"MergeContext",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"search"},caseSensitive:!1}},function(t,e){t.exports={inports:{db:{process:"Write",port:"db"},store:{process:"Store",port:"in"},item:{process:"EnsureId",port:"in"}},outports:{key:{process:"Delete",port:"key"},error:{process:"Errors",port:"out"}},groups:[],processes:{HoldMode:{component:"strings/SendString"},Store:{component:"core/Repeat"},Write:{component:"indexeddb/BeginTransaction"},GetStore:{component:"indexeddb/GetStore"},Delete:{component:"indexeddb/Delete"},EnsureId:{component:"ui/EnsureId"},Errors:{component:"core/Merge"}},connections:[{data:"readwrite",tgt:{process:"HoldMode",port:"string"}},{src:{process:"Store",port:"out"},tgt:{process:"HoldMode",port:"in"}},{src:{process:"HoldMode",port:"out"},tgt:{process:"Write",port:"mode"}},{src:{process:"Store",port:"out"},tgt:{process:"Write",port:"stores"}},{src:{process:"Store",port:"out"},tgt:{process:"GetStore",port:"name"}},{src:{process:"Write",port:"transaction"},tgt:{process:"GetStore",port:"transaction"}},{src:{process:"GetStore",port:"store"},tgt:{process:"Delete",port:"store"}},{src:{process:"EnsureId",port:"id"},tgt:{process:"Delete",port:"key"}},{src:{process:"Write",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"GetStore",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Delete",port:"error"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"trash"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{project:{process:"DeleteProject",port:"key"},graph:{process:"DeleteGraph",port:"key"},component:{process:"DeleteComponent",port:"key"},spec:{process:"DeleteSpec",port:"key"},runtime:{process:"DeleteRuntime",port:"key"},error:{process:"Errors",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},GetProjectsDb:{component:"ui/GetActionValues"},DeleteProject:{component:"ui/Delete"},ProjectsStore:{component:"strings/SendString"},Errors:{component:"core/Merge"},GetGraphsDb:{component:"ui/GetActionValues"},DeleteGraph:{component:"ui/Delete"},GraphsStore:{component:"strings/SendString"},GetComponentsDb:{component:"ui/GetActionValues"},DeleteComponent:{component:"ui/Delete"},ComponentsStore:{component:"strings/SendString"},GetSpecsDb:{component:"ui/GetActionValues"},DeleteSpec:{component:"ui/Delete"},SpecsStore:{component:"strings/SendString"},GetRuntimesDb:{component:"ui/GetActionValues"},DeleteRuntime:{component:"ui/Delete"},RuntimesStore:{component:"strings/SendString"}},connections:[{data:"storage:delete:project,storage:delete:graph,storage:delete:component,storage:delete:spec,storage:delete:runtime",tgt:{process:"Dispatch",port:"routes"}},{data:"db",tgt:{process:"GetProjectsDb",port:"keys"}},{src:{process:"GetProjectsDb",port:"values",index:0},tgt:{process:"DeleteProject",port:"db"}},{data:"projects",tgt:{process:"ProjectsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"GetProjectsDb",port:"in"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"ProjectsStore",port:"in"}},{src:{process:"ProjectsStore",port:"out"},tgt:{process:"DeleteProject",port:"store"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"DeleteProject",port:"item"}},{src:{process:"DeleteProject",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetGraphsDb",port:"keys"}},{src:{process:"GetGraphsDb",port:"values",index:0},tgt:{process:"DeleteGraph",port:"db"}},{data:"graphs",tgt:{process:"GraphsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"GetGraphsDb",port:"in"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"GraphsStore",port:"in"}},{src:{process:"GraphsStore",port:"out"},tgt:{process:"DeleteGraph",port:"store"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"DeleteGraph",port:"item"}},{src:{process:"DeleteGraph",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetComponentsDb",port:"keys"}},{src:{process:"GetComponentsDb",port:"values",index:0},tgt:{process:"DeleteComponent",port:"db"}},{data:"components",tgt:{process:"ComponentsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"GetComponentsDb",port:"in"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"ComponentsStore",port:"in"}},{src:{process:"ComponentsStore",port:"out"},tgt:{process:"DeleteComponent",port:"store"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"DeleteComponent",port:"item"}},{src:{process:"DeleteComponent",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetSpecsDb",port:"keys"}},{src:{process:"GetSpecsDb",port:"values",index:0},tgt:{process:"DeleteSpec",port:"db"}},{data:"specs",tgt:{process:"SpecsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetSpecsDb",port:"in"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"SpecsStore",port:"in"}},{src:{process:"SpecsStore",port:"out"},tgt:{process:"DeleteSpec",port:"store"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"DeleteSpec",port:"item"}},{src:{process:"DeleteSpec",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetRuntimesDb",port:"keys"}},{src:{process:"GetRuntimesDb",port:"values",index:0},tgt:{process:"DeleteRuntime",port:"db"}},{data:"runtimes",tgt:{process:"RuntimesStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GetRuntimesDb",port:"in"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"RuntimesStore",port:"in"}},{src:{process:"RuntimesStore",port:"out"},tgt:{process:"DeleteRuntime",port:"store"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"DeleteRuntime",port:"item"}},{src:{process:"DeleteRuntime",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"trash-o"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Dispatch",port:"pass"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},ApplicationRedirectAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},OpenMainAction:{component:"ui/SetAction"},SaveGraphAction:{component:"ui/SetAction"},SaveComponentAction:{component:"ui/SetAction"},SaveSpecAction:{component:"ui/SetAction"},SaveProjectAction:{component:"ui/SetAction"},GithubPullAction:{component:"ui/SetAction"},GithubOperationAction:{component:"ui/SetAction"},GithubLoadingAction:{component:"ui/SetAction"},GithubReadyAction:{component:"ui/SetAction"},ErrorAction:{component:"ui/SetAction"},CheckRepo:{component:"ui/CheckRepoExists"},CheckGist:{component:"ui/CheckGistExists"},GetGistToken:{component:"ui/GetUserToken"},GetGist:{component:"ui/GistToProject"},GetPrepareToken:{component:"ui/GetUserToken"},GithubSynchronization:{component:"ui/GithubSynchronization"},GetSyncToken:{component:"ui/GetUserToken"},GetPullToken:{component:"ui/GetUserToken"}},connections:[{data:"github:open,github:gist,github:sync:prepare,github:sync:synchronize,github:sync:pull",tgt:{process:"Dispatch",port:"routes"}},{data:"application:sethash",tgt:{process:"ApplicationRedirectAction",port:"action"}},{src:{process:"ApplicationRedirectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"main:open",tgt:{process:"OpenMainAction",port:"action"}},{src:{process:"OpenMainAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:graph",tgt:{process:"SaveGraphAction",port:"action"}},{src:{process:"SaveGraphAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:component",tgt:{process:"SaveComponentAction",port:"action"}},{src:{process:"SaveComponentAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:spec",tgt:{process:"SaveSpecAction",port:"action"}},{src:{process:"SaveSpecAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:project",tgt:{process:"SaveProjectAction",port:"action"}},{src:{process:"SaveProjectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"github:sync:pull",tgt:{process:"GithubPullAction",port:"action"}},{src:{process:"GithubPullAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"github:operation",tgt:{process:"GithubOperationAction",port:"action"}},{src:{process:"GithubOperationAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"github:loading",tgt:{process:"GithubLoadingAction",port:"action"}},{src:{process:"GithubLoadingAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"github:ready",tgt:{process:"GithubReadyAction",port:"action"}},{src:{process:"GithubReadyAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"github:error",tgt:{process:"ErrorAction",port:"action"}},{src:{process:"ErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CheckRepo",port:"in"}},{src:{process:"CheckRepo",port:"existing"},tgt:{process:"ApplicationRedirectAction",port:"in"}},{src:{process:"CheckRepo",port:"openmain"},tgt:{process:"OpenMainAction",port:"in"}},{src:{process:"CheckRepo",port:"new"},tgt:{process:"GithubPullAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"CheckGist",port:"in"}},{src:{process:"CheckGist",port:"existing"},tgt:{process:"ApplicationRedirectAction",port:"in"}},{src:{process:"CheckGist",port:"new"},tgt:{process:"GetGistToken",port:"in"}},{data:"1",tgt:{process:"GetGistToken",port:"limit"}},{src:{process:"GetGistToken",port:"token"},tgt:{process:"GetGist",port:"token"}},{src:{process:"GetGistToken",port:"out"},tgt:{process:"GithubLoadingAction",port:"in"}},{src:{process:"GetGistToken",port:"out"},tgt:{process:"GetGist",port:"in"}},{src:{process:"GetGistToken",port:"error"},tgt:{process:"ErrorAction",port:"in"}},{src:{process:"GetGist",port:"graph"},tgt:{process:"SaveGraphAction",port:"in"}},{src:{process:"GetGist",port:"component"},tgt:{process:"SaveComponentAction",port:"in"}},{src:{process:"GetGist",port:"project"},tgt:{process:"GithubReadyAction",port:"in"}},{src:{process:"GetGist",port:"project"},tgt:{process:"SaveProjectAction",port:"in"}},{src:{process:"GetGist",port:"error"},tgt:{process:"ErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"GetPrepareToken",port:"in"}},{src:{process:"GetPrepareToken",port:"token"},tgt:{process:"GithubSynchronization",port:"token"}},{src:{process:"GetPrepareToken",port:"out"},tgt:{process:"GithubLoadingAction",port:"in"}},{src:{process:"GetPrepareToken",port:"out"},tgt:{process:"GithubSynchronization",port:"prepare"}},{src:{process:"GetPrepareToken",port:"error"},tgt:{process:"ErrorAction",port:"in"}},{src:{process:"GithubSynchronization",port:"operation"},tgt:{process:"GithubReadyAction",port:"in"}},{src:{process:"GithubSynchronization",port:"operation"},tgt:{process:"GithubOperationAction",port:"in"}},{src:{process:"GithubSynchronization",port:"error"},tgt:{process:"ErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetSyncToken",port:"in"}},{src:{process:"GetSyncToken",port:"token"},tgt:{process:"GithubSynchronization",port:"token"}},{src:{process:"GetSyncToken",port:"out"},tgt:{process:"GithubSynchronization",port:"sync"}},{src:{process:"GetSyncToken",port:"error"},tgt:{process:"ErrorAction",port:"in"}},{src:{process:"GithubSynchronization",port:"graph"},tgt:{process:"SaveGraphAction",port:"in"}},{src:{process:"GithubSynchronization",port:"component"},tgt:{process:"SaveComponentAction",port:"in"}},{src:{process:"GithubSynchronization",port:"spec"},tgt:{process:"SaveSpecAction",port:"in"}},{src:{process:"GithubSynchronization",port:"project"},tgt:{process:"SaveProjectAction",port:"in"}},{src:{process:"GithubSynchronization",port:"loading"},tgt:{process:"GithubLoadingAction",port:"in"}},{src:{process:"GithubSynchronization",port:"ready"},tgt:{process:"GithubReadyAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GetPullToken",port:"in"}},{src:{process:"GetPullToken",port:"token"},tgt:{process:"GithubSynchronization",port:"token"}},{src:{process:"GetPullToken",port:"out"},tgt:{process:"GithubSynchronization",port:"pull"}},{src:{process:"GetPullToken",port:"error"},tgt:{process:"ErrorAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"github"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{context:{process:"MergeContext",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},CleanOps:{component:"ui/CleanAction"},OpsToContext:{component:"ui/SetToContext"},CreateCtx:{component:"ui/CreateEmptyContext"},MergeContext:{component:"core/Merge"},ErrorToCtx:{component:"ui/ErrorToContext"},Loading:{component:"ui/CreateLoadingContext"},Ready:{component:"ui/CreateEmptyContext"}},connections:[{data:"github:operation,github:error,github:loading,github:ready",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CleanOps",port:"in"}},{data:"syncOperation",tgt:{process:"OpsToContext",port:"key"}},{src:{process:"CleanOps",port:"out"},tgt:{process:"OpsToContext",port:"value"}},{src:{process:"CleanOps",port:"out"},tgt:{process:"CreateCtx",port:"start"}},{src:{process:"CreateCtx",port:"out"},tgt:{process:"OpsToContext",port:"context"}},{src:{process:"OpsToContext",port:"context"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"ErrorToCtx",port:"error"}},{src:{process:"ErrorToCtx",port:"out"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"Loading",port:"start"}},{src:{process:"Loading",port:"out"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"Ready",port:"start"}},{src:{process:"Ready",port:"out"},tgt:{process:"MergeContext",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"github"},caseSensitive:!1}},function(t,e){t.exports={inports:{token:{process:"Token",port:"in"},prepare:{process:"RepoToPrepare",port:"in"},sync:{process:"DoSync",port:"in"},pull:{process:"PullRepo",port:"in"}},outports:{operation:{process:"MergeOps",port:"out"},component:{process:"UpdatedComponent",port:"out"},graph:{process:"UpdatedGraph",port:"out"},spec:{process:"UpdatedSpec",port:"out"},project:{process:"BlobToEntry",port:"project"},loading:{process:"Loading",port:"out"},ready:{process:"Ready",port:"out"},error:{process:"Errors",port:"out"}},groups:[],processes:{SendRepoKey:{component:"strings/SendString"},GetRepoToPrepare:{component:"objects/GetObjectKey"},RepoToPrepare:{component:"core/Split"},Token:{component:"core/Repeat"},GetReference:{component:"ui/GetReference"},CheckSyncState:{component:"ui/CheckSyncState"},SendProjectKey:{component:"strings/SendString"},GetProject:{component:"objects/GetObjectKey"},Errors:{component:"core/Merge"},MergeOps:{component:"core/Merge"},DoSync:{component:"core/Repeat"},PreparePulls:{component:"ui/PreparePulls"},GetBlob:{component:"ui/GetBlob"},BlobToEntry:{component:"ui/BlobToEntry"},CompletePulls:{component:"flow/Race"},UpdatedComponent:{component:"core/Merge"},UpdatedGraph:{component:"core/Merge"},UpdatedSpec:{component:"core/Merge"},Ready:{component:"core/Repeat"},PreparePush:{component:"ui/PreparePush"},UpdateFromTree:{component:"ui/UpdateFromTree"},CreateTree:{component:"ui/CreateTree"},SendTreeSha:{component:"strings/SendString"},GetTreeSha:{component:"objects/GetObjectKey"},CreateCommit:{component:"ui/CreateCommit"},UpdateReference:{component:"ui/UpdateReference"},SendPullRepo:{component:"strings/SendString"},GetPullRepo:{component:"objects/GetObjectKey"},PullRepo:{component:"core/Split"},Loading:{component:"core/Repeat"},GetPullReference:{component:"ui/GetReference"},CheckPullState:{component:"ui/CheckSyncState"},SendPullProject:{component:"strings/SendString"},GetPullProject:{component:"objects/GetObjectKey"}},connections:[{data:"repo",tgt:{process:"SendRepoKey",port:"string"}},{src:{process:"SendRepoKey",port:"out"},tgt:{process:"GetRepoToPrepare",port:"key"}},{src:{process:"RepoToPrepare",port:"out"},tgt:{process:"GetRepoToPrepare",port:"in"}},{src:{process:"RepoToPrepare",port:"out"},tgt:{process:"SendRepoKey",port:"in"}},{src:{process:"Token",port:"out"},tgt:{process:"GetReference",port:"token"}},{src:{process:"GetRepoToPrepare",port:"out"},tgt:{process:"GetReference",port:"repository"}},{src:{process:"GetReference",port:"reference"},tgt:{process:"CheckSyncState",port:"reference"}},{data:"project",tgt:{process:"SendProjectKey",port:"string"}},{src:{process:"SendProjectKey",port:"out"},tgt:{process:"GetProject",port:"key"}},{src:{process:"GetRepoToPrepare",port:"object"},tgt:{process:"GetProject",port:"in"}},{src:{process:"GetProject",port:"out"},tgt:{process:"CheckSyncState",port:"project"}},{src:{process:"GetRepoToPrepare",port:"object"},tgt:{process:"SendProjectKey",port:"in"}},{src:{process:"Token",port:"out"},tgt:{process:"CheckSyncState",port:"token"}},{src:{process:"GetReference",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"CheckSyncState",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"CheckSyncState",port:"noop"},tgt:{process:"MergeOps",port:"in"}},{src:{process:"CheckSyncState",port:"local"},tgt:{process:"MergeOps",port:"in"}},{src:{process:"CheckSyncState",port:"remote"},tgt:{process:"MergeOps",port:"in"}},{src:{process:"CheckSyncState",port:"both"},tgt:{process:"MergeOps",port:"in"}},{src:{process:"DoSync",port:"out"},tgt:{process:"PreparePulls",port:"in"}},{src:{process:"Token",port:"out"},tgt:{process:"GetBlob",port:"token"}},{src:{process:"PreparePulls",port:"out"},tgt:{process:"BlobToEntry",port:"operation"}},{src:{process:"PreparePulls",port:"repository"},tgt:{process:"GetBlob",port:"repository"}},{src:{process:"PreparePulls",port:"sha"},tgt:{process:"GetBlob",port:"sha"}},{src:{process:"GetBlob",port:"out"},tgt:{process:"CompletePulls",port:"in",index:0}},{src:{process:"CompletePulls",port:"out"},tgt:{process:"BlobToEntry",port:"blob"}},{src:{process:"GetBlob",port:"error"},tgt:{process:"CompletePulls",port:"error"}},{src:{process:"CompletePulls",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"BlobToEntry",port:"component"},tgt:{process:"UpdatedComponent",port:"in"}},{src:{process:"BlobToEntry",port:"graph"},tgt:{process:"UpdatedGraph",port:"in"}},{src:{process:"BlobToEntry",port:"spec"},tgt:{process:"UpdatedSpec",port:"in"}},{src:{process:"BlobToEntry",port:"project"},tgt:{process:"Ready",port:"in"}},{src:{process:"BlobToEntry",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"DoSync",port:"out"},tgt:{process:"PreparePush",port:"in"}},{src:{process:"PreparePush",port:"out"},tgt:{process:"UpdateFromTree",port:"in"}},{src:{process:"PreparePush",port:"basetree"},tgt:{process:"CreateTree",port:"base"}},{src:{process:"Token",port:"out"},tgt:{process:"CreateTree",port:"token"}},{src:{process:"PreparePush",port:"tree"},tgt:{process:"CreateTree",port:"tree"}},{src:{process:"PreparePush",port:"repository"},tgt:{process:"CreateTree",port:"repository"}},{src:{process:"CreateTree",port:"out"},tgt:{process:"UpdateFromTree",port:"tree"}},{src:{process:"PreparePush",port:"repository"},tgt:{process:"UpdateFromTree",port:"repository"}},{src:{process:"Token",port:"out"},tgt:{process:"UpdateFromTree",port:"token"}},{data:"sha",tgt:{process:"SendTreeSha",port:"string"}},{src:{process:"SendTreeSha",port:"out"},tgt:{process:"GetTreeSha",port:"key"}},{src:{process:"CreateTree",port:"out"},tgt:{process:"GetTreeSha",port:"in"}},{src:{process:"CreateTree",port:"out"},tgt:{process:"SendTreeSha",port:"in"}},{src:{process:"GetTreeSha",port:"out"},tgt:{process:"CreateCommit",port:"tree"}},{src:{process:"Token",port:"out"},tgt:{process:"CreateCommit",port:"token"}},{src:{process:"PreparePush",port:"message"},tgt:{process:"CreateCommit",port:"message"}},{src:{process:"PreparePush",port:"parentcommits"},tgt:{process:"CreateCommit",port:"parents"}},{src:{process:"PreparePush",port:"repository"},tgt:{process:"CreateCommit",port:"repository"}},{src:{process:"CreateCommit",port:"out"},tgt:{process:"UpdateReference",port:"commit"}},{src:{process:"PreparePush",port:"ref"},tgt:{process:"UpdateReference",port:"reference"}},{src:{process:"Token",port:"out"},tgt:{process:"UpdateReference",port:"token"}},{src:{process:"PreparePush",port:"repository"},tgt:{process:"UpdateReference",port:"repository"}},{src:{process:"UpdateFromTree",port:"component"},tgt:{process:"UpdatedComponent",port:"in"}},{src:{process:"UpdateFromTree",port:"graph"},tgt:{process:"UpdatedGraph",port:"in"}},{src:{process:"UpdateFromTree",port:"spec"},tgt:{process:"UpdatedSpec",port:"in"}},{src:{process:"UpdateFromTree",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"CreateTree",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"CreateCommit",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"UpdateReference",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"repo",tgt:{process:"SendPullRepo",port:"string"}},{src:{process:"SendPullRepo",port:"out"},tgt:{process:"GetPullRepo",port:"key"}},{src:{process:"PullRepo",port:"out"},tgt:{process:"Loading",port:"in"}},{src:{process:"PullRepo",port:"out"},tgt:{process:"GetPullRepo",port:"in"}},{src:{process:"PullRepo",port:"out"},tgt:{process:"SendPullRepo",port:"in"}},{src:{process:"Token",port:"out"},tgt:{process:"GetPullReference",port:"token"}},{src:{process:"GetPullRepo",port:"out"},tgt:{process:"GetPullReference",port:"repository"}},{src:{process:"GetPullReference",port:"reference"},tgt:{process:"CheckPullState",port:"reference"}},{data:"project",tgt:{process:"SendPullProject",port:"string"}},{src:{process:"SendPullProject",port:"out"},tgt:{process:"GetPullProject",port:"key"}},{src:{process:"GetPullRepo",port:"object"},tgt:{process:"GetPullProject",port:"in"}},{src:{process:"GetPullProject",port:"out"},tgt:{process:"CheckPullState",port:"project"}},{src:{process:"GetPullRepo",port:"object"},tgt:{process:"SendPullProject",port:"in"}},{src:{process:"Token",port:"out"},tgt:{process:"CheckPullState",port:"token"}},{src:{process:"GetPullReference",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"CheckPullState",port:"remote"},tgt:{process:"DoSync",port:"in"}},{src:{process:"CheckPullState",port:"error"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"github-alt"},caseSensitive:!1}},function(t,e){t.exports={inports:{db:{process:"Read",port:"db"},store:{process:"Store",port:"in"}},outports:{item:{process:"Query",port:"item"},empty:{process:"Query",port:"empty"},error:{process:"Errors",port:"out"}},groups:[],processes:{HoldQuery:{component:"strings/SendString"},HoldMode:{component:"strings/SendString"},Store:{component:"core/Repeat"},Read:{component:"indexeddb/BeginTransaction"},GetStore:{component:"indexeddb/GetStore"},Query:{component:"indexeddb/Query"},Errors:{component:"core/Merge"}},connections:[{data:"",tgt:{process:"HoldQuery",port:"string"}},{data:"readonly",tgt:{process:"HoldMode",port:"string"}},{src:{process:"Store",port:"out"},tgt:{process:"HoldQuery",port:"in"}},{src:{process:"Store",port:"out"},tgt:{process:"HoldMode",port:"in"}},{src:{process:"HoldMode",port:"out"},tgt:{process:"Read",port:"mode"}},{src:{process:"Store",port:"out"},tgt:{process:"Read",port:"stores"}},{src:{process:"Store",port:"out"},tgt:{process:"GetStore",port:"name"}},{src:{process:"Read",port:"transaction"},tgt:{process:"GetStore",port:"transaction"}},{src:{process:"GetStore",port:"store"},tgt:{process:"Query",port:"store"}},{src:{process:"HoldQuery",port:"out"},tgt:{process:"Query",port:"all"}},{src:{process:"Read",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"GetStore",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Query",port:"error"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"}},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{project:{process:"LoadProjects",port:"item"},graph:{process:"ConvertGraph",port:"out"},component:{process:"LoadComponents",port:"item"},spec:{process:"LoadSpecs",port:"item"},runtime:{process:"Runtimes",port:"out"},complete:{process:"Collect",port:"out"},error:{process:"Errors",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},GetProjectsDb:{component:"ui/GetActionValues"},LoadProjects:{component:"ui/Load"},ProjectsStore:{component:"strings/SendString"},GetGraphsDb:{component:"ui/GetActionValues"},LoadGraphs:{component:"ui/Load"},GraphsStore:{component:"strings/SendString"},ConvertGraph:{component:"graph/LoadJson"},GetComponentsDb:{component:"ui/GetActionValues"},LoadComponents:{component:"ui/Load"},ComponentsStore:{component:"strings/SendString"},GetSpecsDb:{component:"ui/GetActionValues"},LoadSpecs:{component:"ui/Load"},SpecsStore:{component:"strings/SendString"},GetRuntimesDb:{component:"ui/GetActionValues"},LoadRuntimes:{component:"ui/Load"},RuntimesStore:{component:"strings/SendString"},Runtimes:{component:"core/Merge"},SplitAction:{component:"core/Split"},GetAllRuntimesDb:{component:"ui/GetActionValues"},LoadAllRuntimes:{component:"ui/Load"},AllRuntimesStore:{component:"strings/SendString"},Collect:{component:"ui/CollectInitialData"},Errors:{component:"core/Merge"}},connections:[{data:"storage:load:projects,storage:load:graphs,storage:load:components,storage:load:specs,storage:load:runtimes,storage:load:all",tgt:{process:"Dispatch",port:"routes"}},{data:"db",tgt:{process:"GetProjectsDb",port:"keys"}},{src:{process:"GetProjectsDb",port:"values",index:0},tgt:{process:"LoadProjects",port:"db"}},{data:"projects",tgt:{process:"ProjectsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"GetProjectsDb",port:"in"}},{src:{process:"GetProjectsDb",port:"out"},tgt:{process:"ProjectsStore",port:"in"}},{src:{process:"ProjectsStore",port:"out"},tgt:{process:"LoadProjects",port:"store"}},{src:{process:"LoadProjects",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetGraphsDb",port:"keys"}},{src:{process:"GetGraphsDb",port:"values",index:0},tgt:{process:"LoadGraphs",port:"db"}},{data:"graphs",tgt:{process:"GraphsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"GetGraphsDb",port:"in"}},{src:{process:"GetGraphsDb",port:"out"},tgt:{process:"GraphsStore",port:"in"}},{src:{process:"GraphsStore",port:"out"},tgt:{process:"LoadGraphs",port:"store"}},{src:{process:"LoadGraphs",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"LoadGraphs",port:"item"},tgt:{process:"ConvertGraph",port:"in"}},{src:{process:"ConvertGraph",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetComponentsDb",port:"keys"}},{src:{process:"GetComponentsDb",port:"values",index:0},tgt:{process:"LoadComponents",port:"db"}},{data:"components",tgt:{process:"ComponentsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"GetComponentsDb",port:"in"}},{src:{process:"GetComponentsDb",port:"out"},tgt:{process:"ComponentsStore",port:"in"}},{src:{process:"ComponentsStore",port:"out"},tgt:{process:"LoadComponents",port:"store"}},{src:{process:"LoadComponents",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetSpecsDb",port:"keys"}},{src:{process:"GetSpecsDb",port:"values",index:0},tgt:{process:"LoadSpecs",port:"db"}},{data:"specs",tgt:{process:"SpecsStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetSpecsDb",port:"in"}},{src:{process:"GetSpecsDb",port:"out"},tgt:{process:"SpecsStore",port:"in"}},{src:{process:"SpecsStore",port:"out"},tgt:{process:"LoadSpecs",port:"store"}},{src:{process:"LoadSpecs",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"db",tgt:{process:"GetRuntimesDb",port:"keys"}},{src:{process:"GetRuntimesDb",port:"values",index:0},tgt:{process:"LoadRuntimes",port:"db"}},{data:"runtimes",tgt:{process:"RuntimesStore",port:"string"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GetRuntimesDb",port:"in"}},{src:{process:"GetRuntimesDb",port:"out"},tgt:{process:"RuntimesStore",port:"in"}},{src:{process:"RuntimesStore",port:"out"},tgt:{process:"LoadRuntimes",port:"store"}},{src:{process:"LoadRuntimes",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"LoadRuntimes",port:"item"},tgt:{process:"Runtimes",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"SplitAction",port:"in"}},{src:{process:"SplitAction",port:"out"},tgt:{process:"GetProjectsDb",port:"in"}},{src:{process:"SplitAction",port:"out"},tgt:{process:"GetGraphsDb",port:"in"}},{src:{process:"SplitAction",port:"out"},tgt:{process:"GetComponentsDb",port:"in"}},{src:{process:"SplitAction",port:"out"},tgt:{process:"GetSpecsDb",port:"in"}},{data:"db",tgt:{process:"GetAllRuntimesDb",port:"keys"}},{src:{process:"GetAllRuntimesDb",port:"values",index:0},tgt:{process:"LoadAllRuntimes",port:"db"}},{data:"runtimes",tgt:{process:"AllRuntimesStore",port:"string"}},{src:{process:"SplitAction",port:"out"},tgt:{process:"GetAllRuntimesDb",port:"in"}},{src:{process:"GetAllRuntimesDb",port:"out"},tgt:{process:"AllRuntimesStore",port:"in"}},{src:{process:"AllRuntimesStore",port:"out"},tgt:{process:"LoadAllRuntimes",port:"store"}},{src:{process:"LoadAllRuntimes",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"LoadAllRuntimes",port:"item"},tgt:{process:"Runtimes",port:"in"}},{src:{process:"LoadProjects",port:"item"},tgt:{process:"Collect",port:"project"}},{src:{process:"LoadProjects",port:"empty"},tgt:{process:"Collect",port:"project"}},{src:{process:"ConvertGraph",port:"out"},tgt:{process:"Collect",port:"graph"}},{src:{process:"LoadGraphs",port:"empty"},tgt:{process:"Collect",port:"graph"}},{src:{process:"LoadComponents",port:"item"},tgt:{process:"Collect",port:"component"}},{src:{process:"LoadComponents",port:"empty"},tgt:{process:"Collect",port:"component"}},{src:{process:"LoadSpecs",port:"item"},tgt:{process:"Collect",port:"spec"}},{src:{process:"LoadSpecs",port:"empty"},tgt:{process:"Collect",port:"spec"}},{src:{process:"Runtimes",port:"out"},tgt:{process:"Collect",port:"runtime"}},{src:{process:"LoadAllRuntimes",port:"empty"},tgt:{process:"Collect",port:"runtime"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"}},caseSensitive:!1}},function(t,e){t.exports={inports:{name:{process:"Open",port:"name"}},outports:{error:{process:"Errors",port:"out"},db:{process:"Open",port:"db"}},groups:[],processes:{Open:{component:"indexeddb/Open"},Errors:{component:"core/Merge"},Upgrade:{component:"indexeddb/UpgradeRouter"},CreateProjects:{component:"indexeddb/CreateStore"},CreateGraphs:{component:"indexeddb/CreateStore"},GraphProject:{component:"indexeddb/CreateIndex"},Migrate:{component:"ui/MigrateLocalStorage"},CreateComponents:{component:"indexeddb/CreateStore"},ComponentProject:{component:"indexeddb/CreateIndex"},CreateRuntimes:{component:"indexeddb/CreateStore"},CreateJournals:{component:"indexeddb/CreateStore"},JournalGraph:{component:"indexeddb/CreateIndex"},CreateSpecs:{component:"indexeddb/CreateStore"},SpecProject:{component:"indexeddb/CreateIndex"},DatabaseReady:{component:"ui/DatabaseReady"}},connections:[{src:{process:"Open",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"4",tgt:{process:"Open",port:"version"}},{src:{process:"Open",port:"upgrade"},tgt:{process:"Upgrade",port:"upgrade"}},{data:"projects",tgt:{process:"CreateProjects",port:"name"}},{data:"id",tgt:{process:"CreateProjects",port:"keypath"}},{src:{process:"Upgrade",port:"versions"},tgt:{process:"CreateProjects",port:"db"}},{src:{process:"CreateProjects",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"graphs",tgt:{process:"CreateGraphs",port:"name"}},{data:"id",tgt:{process:"CreateGraphs",port:"keypath"}},{src:{process:"CreateProjects",port:"db"},tgt:{process:"CreateGraphs",port:"db"}},{src:{process:"CreateGraphs",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"project",tgt:{process:"GraphProject",port:"name"}},{data:"project",tgt:{process:"GraphProject",port:"keypath"}},{src:{process:"CreateGraphs",port:"store"},tgt:{process:"GraphProject",port:"store"}},{src:{process:"GraphProject",port:"store"},tgt:{process:"Migrate",port:"graphstore"}},{src:{process:"GraphProject",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"components",tgt:{process:"CreateComponents",port:"name"}},{data:"id",tgt:{process:"CreateComponents",port:"keypath"}},{src:{process:"CreateGraphs",port:"db"},tgt:{process:"CreateComponents",port:"db"}},{src:{process:"CreateComponents",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"project",tgt:{process:"ComponentProject",port:"name"}},{data:"project",tgt:{process:"ComponentProject",port:"keypath"}},{src:{process:"CreateComponents",port:"store"},tgt:{process:"ComponentProject",port:"store"}},{src:{process:"ComponentProject",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"runtimes",tgt:{process:"CreateRuntimes",port:"name"}},{data:"id",tgt:{process:"CreateRuntimes",port:"keypath"}},{src:{process:"Upgrade",port:"versions"},tgt:{process:"CreateRuntimes",port:"db"}},{src:{process:"CreateRuntimes",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"journals",tgt:{process:"CreateJournals",port:"name"}},{data:"id",tgt:{process:"CreateJournals",port:"keypath"}},{src:{process:"Upgrade",port:"versions"},tgt:{process:"CreateJournals",port:"db"}},{src:{process:"CreateJournals",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"graph",tgt:{process:"JournalGraph",port:"name"}},{data:"graph",tgt:{process:"JournalGraph",port:"keypath"}},{src:{process:"CreateJournals",port:"store"},tgt:{process:"JournalGraph",port:"store"}},{src:{process:"JournalGraph",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"specs",tgt:{process:"CreateSpecs",port:"name"}},{data:"id",tgt:{process:"CreateSpecs",port:"keypath"}},{src:{process:"Upgrade",port:"versions"},tgt:{process:"CreateSpecs",port:"db"}},{src:{process:"CreateSpecs",port:"error"},tgt:{process:"Errors",port:"in"}},{data:"project",tgt:{process:"SpecProject",port:"name"}},{data:"project",tgt:{process:"SpecProject",port:"keypath"}},{src:{process:"CreateSpecs",port:"store"},tgt:{process:"SpecProject",port:"store"}},{src:{process:"SpecProject",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Open",port:"db"},tgt:{process:"DatabaseReady",port:"in"}}],properties:{environment:{type:"noflo-browser"}},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Passed",port:"out"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},Passed:{component:"core/Repeat"},RuntimeSaveAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},RuntimeDeleteAction:{component:"ui/SetAction"},RegistryProjectsAction:{component:"ui/SetAction"},RegistryErrorAction:{component:"ui/SetAction"},GetUserStateFetch:{component:"ui/GetActionValues"},GetRuntimes:{component:"ui/GetRemoteRuntimes"},GetUserStatePut:{component:"ui/GetActionValues"},SaveRuntime:{component:"ui/StoreRemoteRuntime"},GetUserStateDel:{component:"ui/GetActionValues"},RemoveRuntime:{component:"ui/RemoveRemoteRuntime"},GetUserStateProjects:{component:"ui/GetActionValues"},GetRemoteProjects:{component:"ui/GetRemoteProjects"},GetUserStateRepos:{component:"ui/GetActionValues"},SplitPullAction:{component:"core/Split"},SendPullAction:{component:"core/Kick"},StoreRemoteProject:{component:"ui/StoreRemoteProject"},GetUserStateDelRepo:{component:"ui/GetActionValues"},RemoveRepository:{component:"ui/RemoveRemoteProject"}},connections:[{data:"flowhub:runtimes:fetch,flowhub:runtimes:register,flowhub:runtimes:remove,flowhub:projects:fetch,github:sync:pull,github:sync:prepare,flowhub:projects:remove",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Passed",port:"in"}},{data:"storage:save:runtime",tgt:{process:"RuntimeSaveAction",port:"action"}},{src:{process:"RuntimeSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:delete:runtime",tgt:{process:"RuntimeDeleteAction",port:"action"}},{src:{process:"RuntimeDeleteAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"flowhub:projects",tgt:{process:"RegistryProjectsAction",port:"action"}},{src:{process:"RegistryProjectsAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"flowhub:error",tgt:{process:"RegistryErrorAction",port:"action"}},{src:{process:"RegistryErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"user,runtimes",tgt:{process:"GetUserStateFetch",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"GetUserStateFetch",port:"in"}},{src:{process:"GetUserStateFetch",port:"values",index:0},tgt:{process:"GetRuntimes",port:"user"}},{src:{process:"GetUserStateFetch",port:"values",index:1},tgt:{process:"GetRuntimes",port:"runtimes"}},{src:{process:"GetRuntimes",port:"runtime"},tgt:{process:"RuntimeSaveAction",port:"in"}},{src:{process:"GetRuntimes",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}},{data:"user",tgt:{process:"GetUserStatePut",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"GetUserStatePut",port:"in"}},{src:{process:"GetUserStatePut",port:"values",index:0},tgt:{process:"SaveRuntime",port:"user"}},{src:{process:"GetUserStatePut",port:"out"},tgt:{process:"SaveRuntime",port:"in"}},{src:{process:"SaveRuntime",port:"out"},tgt:{process:"RuntimeSaveAction",port:"in"}},{src:{process:"SaveRuntime",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}},{data:"user",tgt:{process:"GetUserStateDel",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"GetUserStateDel",port:"in"}},{src:{process:"GetUserStateDel",port:"values",index:0},tgt:{process:"RemoveRuntime",port:"user"}},{src:{process:"GetUserStateDel",port:"out"},tgt:{process:"RemoveRuntime",port:"in"}},{src:{process:"RemoveRuntime",port:"out"},tgt:{process:"RuntimeDeleteAction",port:"in"}},{src:{process:"RemoveRuntime",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}},{data:"user",tgt:{process:"GetUserStateProjects",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetUserStateProjects",port:"in"}},{src:{process:"GetUserStateProjects",port:"values",index:0},tgt:{process:"GetRemoteProjects",port:"user"}},{src:{process:"GetRemoteProjects",port:"projects"},tgt:{process:"RegistryProjectsAction",port:"in"}},{src:{process:"GetRemoteProjects",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}},{data:"user",tgt:{process:"GetUserStateRepos",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"SplitPullAction",port:"in"}},{src:{process:"SplitPullAction",port:"out"},tgt:{process:"GetUserStateRepos",port:"in"}},{src:{process:"SplitPullAction",port:"out"},tgt:{process:"SendPullAction",port:"data"}},{src:{process:"SendPullAction",port:"out"},tgt:{process:"Passed",port:"in"}},{src:{process:"GetUserStateRepos",port:"values",index:0},tgt:{process:"StoreRemoteProject",port:"user"}},{src:{process:"GetUserStateRepos",port:"out"},tgt:{process:"StoreRemoteProject",port:"in"}},{src:{process:"StoreRemoteProject",port:"out"},tgt:{process:"SendPullAction",port:"in"}},{src:{process:"StoreRemoteProject",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"StoreRemoteProject",port:"in"}},{data:"user",tgt:{process:"GetUserStateDelRepo",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:6},tgt:{process:"GetUserStateDelRepo",port:"in"}},{src:{process:"GetUserStateDelRepo",port:"values",index:0},tgt:{process:"RemoveRepository",port:"user"}},{src:{process:"GetUserStateDelRepo",port:"out"},tgt:{process:"RemoveRepository",port:"in"}},{src:{process:"RemoveRepository",port:"error"},tgt:{process:"RegistryErrorAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"address-card-o"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{context:{process:"MergeContext",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},CleanOps:{component:"ui/CleanAction"},OpsToContext:{component:"ui/SetToContext"},CreateCtx:{component:"ui/CreateEmptyContext"},MergeContext:{component:"core/Merge"},ErrorToCtx:{component:"ui/ErrorToContext"}},connections:[{data:"flowhub:projects,flowhub:error",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CleanOps",port:"in"}},{data:"remoteProjects",tgt:{process:"OpsToContext",port:"key"}},{src:{process:"CleanOps",port:"out"},tgt:{process:"OpsToContext",port:"value"}},{src:{process:"CleanOps",port:"out"},tgt:{process:"CreateCtx",port:"start"}},{src:{process:"CreateCtx",port:"out"},tgt:{process:"OpsToContext",port:"context"}},{src:{process:"OpsToContext",port:"context"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"ErrorToCtx",port:"error"}},{src:{process:"ErrorToCtx",port:"out"},tgt:{process:"MergeContext",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"address-card-o"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Passed",port:"out"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},Passed:{component:"core/Merge"},ProjectSaveAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},GraphSaveAction:{component:"ui/SetAction"},ComponentSaveAction:{component:"ui/SetAction"},SpecSaveAction:{component:"ui/SetAction"},RuntimeRegisterAction:{component:"ui/SetAction"},RuntimeSaveAction:{component:"ui/SetAction"},RuntimeErrorAction:{component:"ui/SetAction"},RuntimeOpenedAction:{component:"ui/SetAction"},RuntimeOpeningAction:{component:"ui/SetAction"},RuntimeStatusAction:{component:"ui/SetAction"},RuntimeComponentsAction:{component:"ui/SetAction"},RuntimeComponentAction:{component:"ui/SetAction"},RuntimeStartedAction:{component:"ui/SetAction"},RuntimeStoppedAction:{component:"ui/SetAction"},RuntimePacketAction:{component:"ui/SetAction"},RuntimeIconAction:{component:"ui/SetAction"},RuntimeOutputAction:{component:"ui/SetAction"},RuntimeNetworkErrorAction:{component:"ui/SetAction"},RuntimeProcessErrorAction:{component:"ui/SetAction"},RuntimeProtocolErrorAction:{component:"ui/SetAction"},RuntimeLoadTestsAction:{component:"ui/SetAction"},RuntimeTestSuitesAction:{component:"ui/SetAction"},ApplicationRecreateAction:{component:"ui/SetAction"},StorageOpenedAction:{component:"ui/SetAction"},StorageReadyAction:{component:"ui/SetAction"},ContextEdgesAction:{component:"ui/SetAction"},GetRuntimesState:{component:"ui/GetActionValues"},PopulateRuntimeData:{component:"ui/PopulateRuntimeData"},OpenLiveMode:{component:"ui/OpenLiveMode"},GetProjectRuntimesState:{component:"ui/GetActionValues"},PopulateProjectRuntime:{component:"ui/PopulateProjectRuntime"},OpenProjectMode:{component:"ui/OpenProjectMode"},GetEdgeState:{component:"ui/GetActionValues"},HasEdgeRuntime:{component:"ui/HasActionRuntime"},SendEdges:{component:"ui/SendEdges"},GetRuntimeToProjectValues:{component:"ui/GetActionValues"},RuntimeToProject:{component:"ui/RuntimeToProject"},GetStoredRuntimes:{component:"ui/GetActionValues"},EnsureLocalRuntimes:{component:"ui/EnsureLocalRuntimes"},GetClient:{component:"ui/GetRuntimeClient"},ListenRuntime:{component:"ui/ListenRuntime"},GetStartValues:{component:"ui/GetActionValues"},StartNetwork:{component:"ui/StartNetwork"},GetStopValues:{component:"ui/GetActionValues"},StopNetwork:{component:"ui/StopNetwork"},GetReconnectValues:{component:"ui/GetActionValues"},ReconnectRuntime:{component:"ui/ReconnectRuntime"},GetComponentValues:{component:"ui/GetActionValues"},SendComponentChanges:{component:"ui/SendComponentChanges"},GetGraphChangeValues:{component:"ui/GetActionValues"},SendGraphChanges:{component:"ui/SendGraphChanges"},GetNewGraphValues:{component:"ui/GetActionValues"},SendNewGraph:{component:"ui/SendNewGraph"},GetSubgraphValues:{component:"ui/GetActionValues"},SendSubgraph:{component:"ui/SendSubgraph"},GetLoadTestsValues:{component:"ui/GetActionValues"},LoadTests:{component:"ui/LoadTests"},Async:{component:"core/RepeatAsync"},GetRunTestsValues:{component:"ui/GetActionValues"},RunTests:{component:"ui/RunTests"}},connections:[{data:"runtime:open,storage:opened,context:edges,project:fromruntime,storage:ready,storage:stored:runtime,runtime:start,runtime:stop,runtime:reconnect,runtime:sendComponent,runtime:sendGraphChanges,runtime:sendGraph,runtime:sendSubgraph,runtime:loadTests,runtime:runTests",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Passed",port:"in"}},{data:"storage:save:project",tgt:{process:"ProjectSaveAction",port:"action"}},{src:{process:"ProjectSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:graph",tgt:{process:"GraphSaveAction",port:"action"}},{src:{process:"GraphSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:component",tgt:{process:"ComponentSaveAction",port:"action"}},{src:{process:"ComponentSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:spec",tgt:{process:"SpecSaveAction",port:"action"}},{src:{process:"SpecSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"flowhub:runtimes:register",tgt:{process:"RuntimeRegisterAction",port:"action"}},{src:{process:"RuntimeRegisterAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:save:runtime",tgt:{process:"RuntimeSaveAction",port:"action"}},{src:{process:"RuntimeSaveAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:error",tgt:{process:"RuntimeErrorAction",port:"action"}},{src:{process:"RuntimeErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:opened",tgt:{process:"RuntimeOpenedAction",port:"action"}},{src:{process:"RuntimeOpenedAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:opening",tgt:{process:"RuntimeOpeningAction",port:"action"}},{src:{process:"RuntimeOpeningAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:status",tgt:{process:"RuntimeStatusAction",port:"action"}},{src:{process:"RuntimeStatusAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:components",tgt:{process:"RuntimeComponentsAction",port:"action"}},{src:{process:"RuntimeComponentsAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:component",tgt:{process:"RuntimeComponentAction",port:"action"}},{src:{process:"RuntimeComponentAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:started",tgt:{process:"RuntimeStartedAction",port:"action"}},{src:{process:"RuntimeStartedAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:stopped",tgt:{process:"RuntimeStoppedAction",port:"action"}},{src:{process:"RuntimeStoppedAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:packet",tgt:{process:"RuntimePacketAction",port:"action"}},{src:{process:"RuntimePacketAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:icon",tgt:{process:"RuntimeIconAction",port:"action"}},{src:{process:"RuntimeIconAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:output",tgt:{process:"RuntimeOutputAction",port:"action"}},{src:{process:"RuntimeOutputAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:networkerror",tgt:{process:"RuntimeNetworkErrorAction",port:"action"}},{src:{process:"RuntimeNetworkErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:processerror",tgt:{process:"RuntimeProcessErrorAction",port:"action"}},{src:{process:"RuntimeProcessErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:protocolerror",tgt:{process:"RuntimeProtocolErrorAction",port:"action"}},{src:{process:"RuntimeProtocolErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:loadTests",tgt:{process:"RuntimeLoadTestsAction",port:"action"}},{src:{process:"RuntimeLoadTestsAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:testsuites",tgt:{process:"RuntimeTestSuitesAction",port:"action"}},{src:{process:"RuntimeTestSuitesAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"application:recreatestate",tgt:{process:"ApplicationRecreateAction",port:"action"}},{src:{process:"ApplicationRecreateAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:opened",tgt:{process:"StorageOpenedAction",port:"action"}},{src:{process:"StorageOpenedAction",port:"out"},tgt:{process:"Passed",port:"in"}},{data:"storage:ready",tgt:{process:"StorageReadyAction",port:"action"}},{src:{process:"StorageReadyAction",port:"out"},tgt:{process:"Passed",port:"in"}},{data:"context:edges",tgt:{process:"ContextEdgesAction",port:"action"}},{src:{process:"ContextEdgesAction",port:"out"},tgt:{process:"Passed",port:"in"}},{data:"runtimes,projects",tgt:{process:"GetRuntimesState",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"GetRuntimesState",port:"in"}},{src:{process:"GetRuntimesState",port:"values",index:0},tgt:{process:"PopulateRuntimeData",port:"runtimes"}},{src:{process:"GetRuntimesState",port:"out"},tgt:{process:"PopulateRuntimeData",port:"in"}},{src:{process:"PopulateRuntimeData",port:"out"},tgt:{process:"GetClient",port:"in",index:0}},{src:{process:"PopulateRuntimeData",port:"out"},tgt:{process:"RuntimeOpeningAction",port:"in"}},{src:{process:"PopulateRuntimeData",port:"new"},tgt:{process:"GetClient",port:"updated"}},{src:{process:"PopulateRuntimeData",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"GetClient",port:"out",index:0},tgt:{process:"OpenLiveMode",port:"in"}},{src:{process:"GetRuntimesState",port:"values",index:1},tgt:{process:"OpenLiveMode",port:"projects"}},{src:{process:"GetClient",port:"client",index:0},tgt:{process:"OpenLiveMode",port:"client"}},{src:{process:"OpenLiveMode",port:"out"},tgt:{process:"RuntimeOpenedAction",port:"in"}},{src:{process:"OpenLiveMode",port:"out"},tgt:{process:"RuntimeLoadTestsAction",port:"in"}},{src:{process:"OpenLiveMode",port:"project"},tgt:{process:"ProjectSaveAction",port:"in"}},{src:{process:"OpenLiveMode",port:"graph"},tgt:{process:"GraphSaveAction",port:"in"}},{src:{process:"OpenLiveMode",port:"component"},tgt:{process:"ComponentSaveAction",port:"in"}},{src:{process:"OpenLiveMode",port:"spec"},tgt:{process:"SpecSaveAction",port:"in"}},{src:{process:"OpenLiveMode",port:"runtime"},tgt:{process:"RuntimeSaveAction",port:"in"}},{src:{process:"OpenLiveMode",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"runtimes",tgt:{process:"GetProjectRuntimesState",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"GetProjectRuntimesState",port:"in"}},{src:{process:"GetProjectRuntimesState",port:"values",index:0},tgt:{process:"PopulateProjectRuntime",port:"runtimes"}},{src:{process:"GetProjectRuntimesState",port:"out"},tgt:{process:"PopulateProjectRuntime",port:"in"}},{src:{process:"PopulateProjectRuntime",port:"out"},tgt:{process:"GetClient",port:"in",index:1}},{src:{process:"PopulateProjectRuntime",port:"skipped"},tgt:{process:"StorageOpenedAction",port:"in"}},{src:{process:"GetClient",port:"out",index:1},tgt:{process:"OpenProjectMode",port:"in"}},{src:{process:"GetClient",port:"client",index:1},tgt:{process:"OpenProjectMode",port:"client"}},{src:{process:"OpenProjectMode",port:"out"},tgt:{process:"StorageOpenedAction",port:"in"}},{src:{process:"OpenProjectMode",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"graphs,project",tgt:{process:"GetEdgeState",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"HasEdgeRuntime",port:"in"}},{src:{process:"HasEdgeRuntime",port:"out"},tgt:{process:"GetEdgeState",port:"in"}},{src:{process:"HasEdgeRuntime",port:"missed"},tgt:{process:"Passed",port:"in"}},{src:{process:"GetEdgeState",port:"state"},tgt:{process:"GetClient",port:"in",index:2}},{src:{process:"GetClient",port:"client",index:2},tgt:{process:"SendEdges",port:"client"}},{src:{process:"GetEdgeState",port:"values",index:0},tgt:{process:"SendEdges",port:"graphs"}},{src:{process:"GetEdgeState",port:"values",index:1},tgt:{process:"SendEdges",port:"project"}},{src:{process:"GetEdgeState",port:"out"},tgt:{process:"SendEdges",port:"edges"}},{src:{process:"SendEdges",port:"out"},tgt:{process:"ContextEdgesAction",port:"in"}},{src:{process:"SendEdges",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetRuntimeToProjectValues",port:"in"}},{src:{process:"GetRuntimeToProjectValues",port:"out"},tgt:{process:"GetClient",port:"in",index:3}},{src:{process:"GetClient",port:"out",index:3},tgt:{process:"RuntimeToProject",port:"in"}},{src:{process:"GetClient",port:"client",index:3},tgt:{process:"RuntimeToProject",port:"client"}},{src:{process:"RuntimeToProject",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"runtimes",tgt:{process:"GetStoredRuntimes",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"GetStoredRuntimes",port:"in"}},{src:{process:"GetStoredRuntimes",port:"values",index:0},tgt:{process:"EnsureLocalRuntimes",port:"in"}},{src:{process:"EnsureLocalRuntimes",port:"out"},tgt:{process:"RuntimeSaveAction",port:"in"}},{src:{process:"EnsureLocalRuntimes",port:"runtimes"},tgt:{process:"GetClient",port:"initial"}},{src:{process:"GetStoredRuntimes",port:"out"},tgt:{process:"StorageReadyAction",port:"in"}},{src:{process:"GetClient",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"GetClient",port:"instance"},tgt:{process:"ListenRuntime",port:"in"}},{src:{process:"ListenRuntime",port:"runtimeupdate"},tgt:{process:"RuntimeRegisterAction",port:"in"}},{src:{process:"ListenRuntime",port:"status"},tgt:{process:"RuntimeStatusAction",port:"in"}},{src:{process:"ListenRuntime",port:"components"},tgt:{process:"RuntimeComponentsAction",port:"in"}},{src:{process:"ListenRuntime",port:"component"},tgt:{process:"RuntimeComponentAction",port:"in"}},{src:{process:"ListenRuntime",port:"started"},tgt:{process:"RuntimeStartedAction",port:"in"}},{src:{process:"ListenRuntime",port:"stopped"},tgt:{process:"RuntimeStoppedAction",port:"in"}},{src:{process:"ListenRuntime",port:"packet"},tgt:{process:"RuntimePacketAction",port:"in"}},{src:{process:"ListenRuntime",port:"icon"},tgt:{process:"RuntimeIconAction",port:"in"}},{src:{process:"ListenRuntime",port:"output"},tgt:{process:"RuntimeOutputAction",port:"in"}},{src:{process:"ListenRuntime",port:"networkerror"},tgt:{process:"RuntimeNetworkErrorAction",port:"in"}},{src:{process:"ListenRuntime",port:"processerror"},tgt:{process:"RuntimeProcessErrorAction",port:"in"}},{src:{process:"ListenRuntime",port:"protocolerror"},tgt:{process:"RuntimeProtocolErrorAction",port:"in"}},{src:{process:"ListenRuntime",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"GetClient",port:"updated"}},{src:{process:"GetClient",port:"updated"},tgt:{process:"Passed",port:"in"}},{src:{process:"Dispatch",port:"handle",index:6},tgt:{process:"GetStartValues",port:"in"}},{src:{process:"GetStartValues",port:"out"},tgt:{process:"GetClient",port:"in",index:4}},{src:{process:"GetClient",port:"out",index:4},tgt:{process:"StartNetwork",port:"in"}},{src:{process:"GetClient",port:"client",index:4},tgt:{process:"StartNetwork",port:"client"}},{src:{process:"StartNetwork",port:"out"},tgt:{process:"RuntimeStartedAction",port:"in"}},{src:{process:"StartNetwork",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:7},tgt:{process:"GetStopValues",port:"in"}},{src:{process:"GetStopValues",port:"out"},tgt:{process:"GetClient",port:"in",index:5}},{src:{process:"GetClient",port:"out",index:5},tgt:{process:"StopNetwork",port:"in"}},{src:{process:"GetClient",port:"client",index:5},tgt:{process:"StopNetwork",port:"client"}},{src:{process:"StopNetwork",port:"out"},tgt:{process:"RuntimeStoppedAction",port:"in"}},{src:{process:"StopNetwork",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:8},tgt:{process:"GetReconnectValues",port:"in"}},{src:{process:"GetReconnectValues",port:"out"},tgt:{process:"GetClient",port:"in",index:6}},{src:{process:"GetClient",port:"out",index:6},tgt:{process:"ReconnectRuntime",port:"in"}},{src:{process:"GetClient",port:"client",index:6},tgt:{process:"ReconnectRuntime",port:"client"}},{src:{process:"ReconnectRuntime",port:"out"},tgt:{process:"ApplicationRecreateAction",port:"in"}},{src:{process:"ReconnectRuntime",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetComponentValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:9},tgt:{process:"GetComponentValues",port:"in"}},{src:{process:"GetComponentValues",port:"out"},tgt:{process:"GetClient",port:"in",index:7}},{src:{process:"GetClient",port:"out",index:7},tgt:{process:"SendComponentChanges",port:"in"}},{src:{process:"GetClient",port:"client",index:7},tgt:{process:"SendComponentChanges",port:"client"}},{src:{process:"GetComponentValues",port:"values",index:0},tgt:{process:"SendComponentChanges",port:"project"}},{src:{process:"SendComponentChanges",port:"out"},tgt:{process:"RuntimeComponentAction",port:"in"}},{src:{process:"SendComponentChanges",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetGraphChangeValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:10},tgt:{process:"GetGraphChangeValues",port:"in"}},{src:{process:"GetGraphChangeValues",port:"out"},tgt:{process:"GetClient",port:"in",index:8}},{src:{process:"GetClient",port:"out",index:8},tgt:{process:"SendGraphChanges",port:"in"}},{src:{process:"GetClient",port:"client",index:8},tgt:{process:"SendGraphChanges",port:"client"}},{src:{process:"GetGraphChangeValues",port:"values",index:0},tgt:{process:"SendGraphChanges",port:"project"}},{src:{process:"SendGraphChanges",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetNewGraphValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:11},tgt:{process:"GetNewGraphValues",port:"in"}},{src:{process:"GetNewGraphValues",port:"out"},tgt:{process:"GetClient",port:"in",index:9}},{src:{process:"GetClient",port:"out",index:9},tgt:{process:"SendNewGraph",port:"in"}},{src:{process:"GetClient",port:"client",index:9},tgt:{process:"SendNewGraph",port:"client"}},{src:{process:"SendNewGraph",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetSubgraphValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:12},tgt:{process:"GetSubgraphValues",port:"in"}},{src:{process:"GetSubgraphValues",port:"out"},tgt:{process:"GetClient",port:"in",index:10}},{src:{process:"GetClient",port:"out",index:10},tgt:{process:"SendSubgraph",port:"in"}},{src:{process:"GetClient",port:"client",index:10},tgt:{process:"SendSubgraph",port:"client"}},{src:{process:"SendSubgraph",port:"out"},tgt:{process:"GraphSaveAction",port:"in"}},{src:{process:"SendSubgraph",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetLoadTestsValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:13},tgt:{process:"GetLoadTestsValues",port:"in"}},{src:{process:"GetLoadTestsValues",port:"out"},tgt:{process:"LoadTests",port:"in"}},{src:{process:"LoadTests",port:"out"},tgt:{process:"Async",port:"in"}},{src:{process:"Async",port:"out"},tgt:{process:"RuntimeTestSuitesAction",port:"in"}},{src:{process:"LoadTests",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}},{data:"project",tgt:{process:"GetRunTestsValues",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:14},tgt:{process:"GetRunTestsValues",port:"in"}},{src:{process:"GetRunTestsValues",port:"out"},tgt:{process:"GetClient",port:"in",index:11}},{src:{process:"GetClient",port:"out",index:11},tgt:{process:"RunTests",port:"in"}},{src:{process:"GetClient",port:"client",index:11},tgt:{process:"RunTests",port:"client"}},{src:{process:"RunTests",port:"out"},tgt:{process:"RuntimeTestSuitesAction",port:"in"}},{src:{process:"RunTests",port:"error"},tgt:{process:"RuntimeErrorAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"cogs"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Passed",port:"out"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},Passed:{component:"core/Merge"},StorageDbAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},StorageReadyAction:{component:"ui/SetAction"},StorageInitialLoadAction:{component:"ui/SetAction"},StorageInitialDataAction:{component:"ui/SetAction"},StorageProjectAction:{component:"ui/SetAction"},StorageGraphAction:{component:"ui/SetAction"},StorageComponentAction:{component:"ui/SetAction"},StorageSpecAction:{component:"ui/SetAction"},StorageRuntimeAction:{component:"ui/SetAction"},RemovedProjectAction:{component:"ui/SetAction"},RemovedGraphAction:{component:"ui/SetAction"},RemovedComponentAction:{component:"ui/SetAction"},RemovedSpecAction:{component:"ui/SetAction"},RemovedRuntimeAction:{component:"ui/SetAction"},StorageErrorAction:{component:"ui/SetAction"},StorageOpenAction:{component:"ui/SetAction"},RuntimeLoadTestsAction:{component:"ui/SetAction"},ApplicationHashAction:{component:"ui/SetAction"},DbName:{component:"strings/SendString"},PrepareStorage:{component:"ui/PrepareStorage"},LoadData:{component:"ui/LoadData"},SplitSave:{component:"core/Split"},OpenNewProject:{component:"ui/OpenNewProject"},SaveData:{component:"ui/SaveData"},DeleteData:{component:"ui/DeleteData"},OpenProject:{component:"ui/OpenProject"}},connections:[{data:"noflo:ready,storage:load:*,storage:save:*,storage:delete:*,storage:open",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Passed",port:"in"}},{data:"storage:db",tgt:{process:"StorageDbAction",port:"action"}},{src:{process:"StorageDbAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:ready",tgt:{process:"StorageReadyAction",port:"action"}},{src:{process:"StorageReadyAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:load:all",tgt:{process:"StorageInitialLoadAction",port:"action"}},{src:{process:"StorageInitialLoadAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:initial",tgt:{process:"StorageInitialDataAction",port:"action"}},{src:{process:"StorageInitialDataAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:project",tgt:{process:"StorageProjectAction",port:"action"}},{src:{process:"StorageProjectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:graph",tgt:{process:"StorageGraphAction",port:"action"}},{src:{process:"StorageGraphAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:component",tgt:{process:"StorageComponentAction",port:"action"}},{src:{process:"StorageComponentAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:spec",tgt:{process:"StorageSpecAction",port:"action"}},{src:{process:"StorageSpecAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:stored:runtime",tgt:{process:"StorageRuntimeAction",port:"action"}},{src:{process:"StorageRuntimeAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:removed:project",tgt:{process:"RemovedProjectAction",port:"action"}},{src:{process:"RemovedProjectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:removed:graph",tgt:{process:"RemovedGraphAction",port:"action"}},{src:{process:"RemovedGraphAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:removed:component",tgt:{process:"RemovedComponentAction",port:"action"}},{src:{process:"RemovedComponentAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:removed:spec",tgt:{process:"RemovedSpecAction",port:"action"}},{src:{process:"RemovedSpecAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:removed:runtime",tgt:{process:"RemovedRuntimeAction",port:"action"}},{src:{process:"RemovedRuntimeAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:error",tgt:{process:"StorageErrorAction",port:"action"}},{src:{process:"StorageErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"storage:opened",tgt:{process:"StorageOpenAction",port:"action"}},{src:{process:"StorageOpenAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"runtime:loadTests",tgt:{process:"RuntimeLoadTestsAction",port:"action"}},{src:{process:"RuntimeLoadTestsAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"application:sethash",tgt:{process:"ApplicationHashAction",port:"action"}},{src:{process:"ApplicationHashAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"noflo-ui",tgt:{process:"DbName",port:"string"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"DbName",port:"in"}},{src:{process:"DbName",port:"out"},tgt:{process:"PrepareStorage",port:"name"}},{src:{process:"PrepareStorage",port:"db"},tgt:{process:"StorageDbAction",port:"in"}},{src:{process:"PrepareStorage",port:"db"},tgt:{process:"StorageInitialLoadAction",port:"in"}},{src:{process:"PrepareStorage",port:"error"},tgt:{process:"StorageErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"LoadData",port:"in"}},{src:{process:"LoadData",port:"complete"},tgt:{process:"StorageInitialDataAction",port:"in"}},{src:{process:"LoadData",port:"complete"},tgt:{process:"StorageReadyAction",port:"in"}},{src:{process:"LoadData",port:"error"},tgt:{process:"StorageErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"SplitSave",port:"in"}},{src:{process:"SplitSave",port:"out"},tgt:{process:"OpenNewProject",port:"in"}},{src:{process:"SplitSave",port:"out"},tgt:{process:"SaveData",port:"in"}},{src:{process:"SaveData",port:"project"},tgt:{process:"OpenNewProject",port:"project"}},{src:{process:"OpenNewProject",port:"out"},tgt:{process:"StorageProjectAction",port:"in"}},{src:{process:"OpenNewProject",port:"hash"},tgt:{process:"ApplicationHashAction",port:"in"}},{src:{process:"SaveData",port:"graph"},tgt:{process:"StorageGraphAction",port:"in"}},{src:{process:"SaveData",port:"component"},tgt:{process:"StorageComponentAction",port:"in"}},{src:{process:"SaveData",port:"spec"},tgt:{process:"StorageSpecAction",port:"in"}},{src:{process:"SaveData",port:"runtime"},tgt:{process:"StorageRuntimeAction",port:"in"}},{src:{process:"SaveData",port:"error"},tgt:{process:"StorageErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"DeleteData",port:"in"}},{src:{process:"DeleteData",port:"project"},tgt:{process:"RemovedProjectAction",port:"in"}},{src:{process:"DeleteData",port:"graph"},tgt:{process:"RemovedGraphAction",port:"in"}},{src:{process:"DeleteData",port:"component"},tgt:{process:"RemovedComponentAction",port:"in"}},{src:{process:"DeleteData",port:"spec"},tgt:{process:"RemovedSpecAction",port:"in"}},{src:{process:"DeleteData",port:"runtime"},tgt:{process:"RemovedRuntimeAction",port:"in"}},{src:{process:"DeleteData",port:"error"},tgt:{process:"StorageErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"OpenProject",port:"in"}},{src:{process:"OpenProject",port:"out"},tgt:{process:"StorageOpenAction",port:"in"}},{src:{process:"OpenProject",port:"out"},tgt:{process:"RuntimeLoadTestsAction",port:"in"}},{src:{process:"OpenProject",port:"error"},tgt:{process:"StorageErrorAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"database"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Passed",port:"out"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},Passed:{component:"core/Repeat"},ApplicationUrlAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},ApplicationRedirectAction:{component:"ui/SetAction"},ApplicationHashAction:{component:"ui/SetAction"},NofloReady:{component:"core/Split"},InitialURL:{component:"ui/GetUrl"},SplitReady:{component:"core/Split"},Async:{component:"core/RepeatAsync"},ListenHash:{component:"interaction/ListenHash"},Redirect:{component:"ui/SetUrl"},HashToAction:{component:"ui/Router"},SetUrlHash:{component:"ui/SetUrlHash"},SendCurrentHash:{component:"ui/SendCurrentHash"}},connections:[{data:"noflo:ready,storage:ready,application:redirect,application:hash,application:sethash,application:recreatestate",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"pass"},tgt:{process:"Passed",port:"in"}},{data:"application:url",tgt:{process:"ApplicationUrlAction",port:"action"}},{src:{process:"ApplicationUrlAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"application:redirect",tgt:{process:"ApplicationRedirectAction",port:"action"}},{src:{process:"ApplicationRedirectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"application:hash",tgt:{process:"ApplicationHashAction",port:"action"}},{src:{process:"ApplicationHashAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"NofloReady",port:"in"}},{src:{process:"NofloReady",port:"out"},tgt:{process:"Passed",port:"in"}},{src:{process:"NofloReady",port:"out"},tgt:{process:"InitialURL",port:"in"}},{src:{process:"InitialURL",port:"out"},tgt:{process:"ApplicationUrlAction",port:"in"}},{src:{process:"ListenHash",port:"initial"},tgt:{process:"ApplicationHashAction",port:"in"}},{src:{process:"ListenHash",port:"change"},tgt:{process:"ApplicationHashAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"SplitReady",port:"in"}},{src:{process:"SplitReady",port:"out"},tgt:{process:"Async",port:"in"}},{src:{process:"Async",port:"out"},tgt:{process:"ListenHash",port:"start"}},{src:{process:"SplitReady",port:"out"},tgt:{process:"Passed",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"Redirect",port:"in"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"HashToAction",port:"in"}},{src:{process:"HashToAction",port:"route"},tgt:{process:"NewActions",port:"in"}},{src:{process:"HashToAction",port:"redirect"},tgt:{process:"ApplicationRedirectAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:4},tgt:{process:"SetUrlHash",port:"in"}},{src:{process:"Dispatch",port:"handle",index:5},tgt:{process:"SendCurrentHash",port:"in"}},{src:{process:"SendCurrentHash",port:"out"},tgt:{process:"ApplicationHashAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"slack"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{pass:{process:"Dispatch",port:"pass"},new:{process:"NewActions",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},UserInfoAction:{component:"ui/SetAction"},NewActions:{component:"core/Merge"},UserErrorAction:{component:"ui/SetAction"},ApplicationRedirectAction:{component:"ui/SetAction"},RegistryRuntimesFetch:{component:"ui/SetAction"},UserLogoutAction:{component:"ui/SetAction"},CheckQuery:{component:"ui/CheckTokenGrant"},ExchangeToken:{component:"ui/ExchangeGrantToken"},GetRemoteUser:{component:"ui/GetRemoteUser"},StoreUser:{component:"ui/StoreUser"},LoadUser:{component:"ui/LoadUserData"},RefreshUser:{component:"ui/RefreshRemoteUser"},Login:{component:"ui/LoginOAuth"},Reset:{component:"ui/ClearUserData"},GetUserStateForUpdate:{component:"ui/GetActionValues"},StoreUserPreferences:{component:"ui/StoreUserPreferences"}},connections:[{data:"application:url,user:login,user:logout,user:update",tgt:{process:"Dispatch",port:"routes"}},{data:"user:info",tgt:{process:"UserInfoAction",port:"action"}},{src:{process:"UserInfoAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"user:error",tgt:{process:"UserErrorAction",port:"action"}},{src:{process:"UserErrorAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"application:redirect",tgt:{process:"ApplicationRedirectAction",port:"action"}},{src:{process:"ApplicationRedirectAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"flowhub:runtimes:fetch",tgt:{process:"RegistryRuntimesFetch",port:"action"}},{src:{process:"RegistryRuntimesFetch",port:"out"},tgt:{process:"NewActions",port:"in"}},{data:"user:logout",tgt:{process:"UserLogoutAction",port:"action"}},{src:{process:"UserLogoutAction",port:"out"},tgt:{process:"NewActions",port:"in"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CheckQuery",port:"in"}},{src:{process:"CheckQuery",port:"code"},tgt:{process:"ExchangeToken",port:"code"}},{src:{process:"CheckQuery",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"ExchangeToken",port:"token"},tgt:{process:"GetRemoteUser",port:"token"}},{src:{process:"ExchangeToken",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"GetRemoteUser",port:"user"},tgt:{process:"StoreUser",port:"user"}},{src:{process:"GetRemoteUser",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"StoreUser",port:"user"},tgt:{process:"UserInfoAction",port:"in"}},{src:{process:"StoreUser",port:"user"},tgt:{process:"RegistryRuntimesFetch",port:"in"}},{src:{process:"StoreUser",port:"redirect"},tgt:{process:"ApplicationRedirectAction",port:"in"}},{src:{process:"CheckQuery",port:"pass"},tgt:{process:"LoadUser",port:"start"}},{src:{process:"LoadUser",port:"user"},tgt:{process:"UserInfoAction",port:"in"}},{src:{process:"LoadUser",port:"user"},tgt:{process:"RefreshUser",port:"in"}},{src:{process:"RefreshUser",port:"pass"},tgt:{process:"UserInfoAction",port:"in"}},{src:{process:"RefreshUser",port:"updated"},tgt:{process:"StoreUser",port:"user"}},{src:{process:"RefreshUser",port:"invalid"},tgt:{process:"UserLogoutAction",port:"in"}},{src:{process:"LoadUser",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"RefreshUser",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"Login",port:"in"}},{src:{process:"Login",port:"codeurl"},tgt:{process:"CheckQuery",port:"in"}},{src:{process:"Login",port:"redirect"},tgt:{process:"ApplicationRedirectAction",port:"in"}},{src:{process:"Login",port:"error"},tgt:{process:"UserErrorAction",port:"in"}},{src:{process:"Dispatch",port:"handle",index:2},tgt:{process:"Reset",port:"clear"}},{src:{process:"Reset",port:"user"},tgt:{process:"UserInfoAction",port:"in"}},{data:"user",tgt:{process:"GetUserStateForUpdate",port:"keys"}},{src:{process:"Dispatch",port:"handle",index:3},tgt:{process:"GetUserStateForUpdate",port:"in"}},{src:{process:"GetUserStateForUpdate",port:"values",index:0},tgt:{process:"StoreUserPreferences",port:"user"}},{src:{process:"GetUserStateForUpdate",port:"out"},tgt:{process:"StoreUserPreferences",port:"in"}},{src:{process:"StoreUserPreferences",port:"out"},tgt:{process:"UserInfoAction",port:"in"}},{src:{process:"StoreUserPreferences",port:"error"},tgt:{process:"UserErrorAction",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"user-circle"},caseSensitive:!1}},function(t,e){t.exports={inports:{in:{process:"Dispatch",port:"in"}},outports:{context:{process:"MergeContext",port:"out"}},groups:[],processes:{Dispatch:{component:"ui/DispatchAction"},CleanUser:{component:"ui/CleanAction"},UserToContext:{component:"ui/SetToContext"},CreateCtx:{component:"ui/CreateEmptyContext"},MergeContext:{component:"core/Merge"},ErrorToCtx:{component:"ui/ErrorToContext"}},connections:[{data:"user:info,user:error",tgt:{process:"Dispatch",port:"routes"}},{src:{process:"Dispatch",port:"handle",index:0},tgt:{process:"CleanUser",port:"in"}},{data:"user",tgt:{process:"UserToContext",port:"key"}},{src:{process:"CleanUser",port:"out"},tgt:{process:"UserToContext",port:"value"}},{src:{process:"CleanUser",port:"out"},tgt:{process:"CreateCtx",port:"start"}},{src:{process:"CreateCtx",port:"out"},tgt:{process:"UserToContext",port:"context"}},{src:{process:"UserToContext",port:"context"},tgt:{process:"MergeContext",port:"in"}},{src:{process:"Dispatch",port:"handle",index:1},tgt:{process:"ErrorToCtx",port:"error"}},{src:{process:"ErrorToCtx",port:"out"},tgt:{process:"MergeContext",port:"in"}}],properties:{environment:{type:"noflo-browser"},icon:"user-circle"},caseSensitive:!1}}],[[199,0,1,4]]]);
//# sourceMappingURL=backend.a512a45105e8702a70c438c3bdeef4d1.min.js.map